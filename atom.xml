<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-03T03:28:23.459Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux语法操作</title>
    <link href="http://yoursite.com/2019/12/28/shell/"/>
    <id>http://yoursite.com/2019/12/28/shell/</id>
    <published>2019-12-27T16:00:00.000Z</published>
    <updated>2020-01-03T03:28:23.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gt-File"><a href="#gt-File" class="headerlink" title="&gt;File"></a>&gt;File</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls       </span><br><span class="line">ll     </span><br><span class="line">ls -l  </span><br><span class="line">ll -rt</span><br></pre></td></tr></table></figure><h1 id="gt-shell-base"><a href="#gt-shell-base" class="headerlink" title="&gt;shell base"></a>&gt;shell base</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+w:删除光标前面的单词的字符</span><br><span class="line">Ctrl – a ：移到行首</span><br><span class="line">Ctrl – e ：移到行尾</span><br><span class="line">esc - f  : 前移一个词</span><br><span class="line">esc - b:  后移一个词</span><br></pre></td></tr></table></figure><p>创建文件用touch<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：touch [1.txt]</span><br></pre></td></tr></table></figure></p><p>删除文件用rm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：rm -f [1.txt]</span><br></pre></td></tr></table></figure></p><p>创建目录用mkdir<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：mkdir [xxx]     &#123; -p 参数来创建多级文件夹 &#125;</span><br></pre></td></tr></table></figure></p><p>删除空目录用rmdir<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：rmdir [xxx]（有东西的目录不能删）</span><br></pre></td></tr></table></figure></p><p>打开文件    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  vim open cat more less</span><br></pre></td></tr></table></figure><p>批量创建    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p nginxdb/&#123;conf,conf.d,html,logs&#125;</span><br></pre></td></tr></table></figure><h1 id="gt-删除"><a href="#gt-删除" class="headerlink" title="&gt;删除"></a>&gt;删除</h1><p>删除装有东西的目录就用</p><figure class="highlight plain"><figcaption><span>-rfi 例如rm -rfi [XXX]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i是为了提醒 最好加上</span><br></pre></td></tr></table></figure><h1 id="gt-查看"><a href="#gt-查看" class="headerlink" title="&gt;查看"></a>&gt;查看</h1><p>文件末尾<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Tail -20 [filename]</span><br><span class="line"># &gt;经常查看日志需要用到这个</span><br><span class="line">tail -f xxx.log -n100</span><br></pre></td></tr></table></figure></p><p>重新命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mv [old.text] [new.text]</span><br></pre></td></tr></table></figure></p><h1 id="gt-杀死进程"><a href="#gt-杀死进程" class="headerlink" title="&gt;杀死进程"></a>&gt;杀死进程</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Kill [pid]</span><br></pre></td></tr></table></figure><p>pkill和阿里源码里学的<br>直接删除程序对应的进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill -f zwkj-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></p><h1 id="gt-权限赋予"><a href="#gt-权限赋予" class="headerlink" title="&gt;权限赋予"></a>&gt;权限赋予</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Chmod -R 777 [目录]</span><br><span class="line">建议了解下 linux权限的 0124 组成 这样就知道777怎么来的</span><br><span class="line">chown apple/staff xxx</span><br></pre></td></tr></table></figure><h1 id="gt-解压"><a href="#gt-解压" class="headerlink" title="&gt;解压"></a>&gt;解压</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">zip all.zip *.jpg</span><br><span class="line"></span><br><span class="line">unzip all.zip</span><br></pre></td></tr></table></figure><h1 id="gt-Grep-管道查询"><a href="#gt-Grep-管道查询" class="headerlink" title="&gt;Grep 管道查询"></a>&gt;Grep 管道查询</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-A num：匹配到搜索到的行以及该行下面的num行</span><br><span class="line">  </span><br><span class="line">-B num：匹配到搜索到的行以及该行上面的num行</span><br><span class="line"></span><br><span class="line">-C num：匹配到搜索到的行以及上下各num行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep -E -B 1  &apos;use time:&apos; /data/home/zhxt/zhxt-test/logs/test.log</span><br><span class="line"></span><br><span class="line">ls | grep &apos;.docx&apos;</span><br><span class="line"></span><br><span class="line">ls | grep a*   (a 开头的)</span><br><span class="line"></span><br><span class="line">ls | grep &apos;a*&apos;  (包含a的)</span><br><span class="line"></span><br><span class="line">https://www.cnblogs.com/kongzhongqijing/articles/4462793.html</span><br></pre></td></tr></table></figure><h1 id="gt-查看历史输入的命令"><a href="#gt-查看历史输入的命令" class="headerlink" title="&gt;查看历史输入的命令"></a>&gt;查看历史输入的命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.bash_history</span><br></pre></td></tr></table></figure><h1 id="gt-查看执行文件的路径"><a href="#gt-查看执行文件的路径" class="headerlink" title="&gt;查看执行文件的路径"></a>&gt;查看执行文件的路径</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis mysql</span><br></pre></td></tr></table></figure><h1 id="gt-读取文件"><a href="#gt-读取文件" class="headerlink" title="&gt;读取文件"></a>&gt;读取文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cat [filename]</span><br></pre></td></tr></table></figure><h1 id="gt-查询文件"><a href="#gt-查询文件" class="headerlink" title="&gt;查询文件"></a>&gt;查询文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find [path_root] -name &apos;*.doc*&apos;</span><br><span class="line">find / -name [xxx] -d</span><br><span class="line">locate</span><br></pre></td></tr></table></figure><h1 id="gt-查看某个端口是否被占用"><a href="#gt-查看某个端口是否被占用" class="headerlink" title="&gt;查看某个端口是否被占用"></a>&gt;查看某个端口是否被占用</h1><p>习惯用lsof  不想用netstat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装 </span><br><span class="line">yum install lsof -y</span><br><span class="line">lsof -i tcp:8080     (PS 必须用root权限)</span><br><span class="line"></span><br><span class="line">netstat -tunlp|grep [端口号]</span><br><span class="line">ps -axu|grep [java]  启动位置输出</span><br></pre></td></tr></table></figure></p><h1 id="gt-文件下载"><a href="#gt-文件下载" class="headerlink" title="&gt;文件下载"></a>&gt;文件下载</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.zip --no-check-certificate</span><br></pre></td></tr></table></figure><h1 id="gt-scp下载"><a href="#gt-scp下载" class="headerlink" title="&gt;scp下载"></a>&gt;scp下载</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -P 2204 isinonet@106.37.74.50:/home/gzzx/excel/ProfessionReport18584791024.xlsx /Users/apple/Documents</span><br><span class="line">scp -P 2204 isinonet@106.37.74.50:/logs/test.log /Users/apple/Documents</span><br><span class="line">-r 文件夹   -p端口</span><br></pre></td></tr></table></figure><h1 id="gt-上传"><a href="#gt-上传" class="headerlink" title="&gt;上传"></a>&gt;上传</h1><p>服务器文件移动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /Users/apple/Documents/zwsj-category-0.0.1-SNAPSHOT.jar root@192.168.0.118:/home/zwsjObj</span><br><span class="line">Scp -r</span><br></pre></td></tr></table></figure></p><h1 id="gt-其他"><a href="#gt-其他" class="headerlink" title="&gt;其他"></a>&gt;其他</h1><p>查看磁盘容量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">df -hl /xxx</span><br></pre></td></tr></table></figure></p><p>查看位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">which java</span><br></pre></td></tr></table></figure></p><p>rpm包安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rpm -ivh **.rpm</span><br></pre></td></tr></table></figure></p><p>后台运行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Nohup 详细指南</span><br></pre></td></tr></table></figure></p><p>该命令用来列出目前与过去登录系统的用户相关信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Last</span><br></pre></td></tr></table></figure></p><p>Linux查看文件夹大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">du -sh</span><br></pre></td></tr></table></figure></p><p>查看当前文件夹大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">du -sh * | sort -n</span><br></pre></td></tr></table></figure></p><p>统计当前文件夹(目录)大小，并按文件大小排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">du -sk filename 查看指定文件大小</span><br></pre></td></tr></table></figure></p><p>遇到其他不会的命令实例可以按照这个命令来查看基础语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tldr  mkdir</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;gt-File&quot;&gt;&lt;a href=&quot;#gt-File&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt;File&quot;&gt;&lt;/a&gt;&amp;gt;File&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>vimrc配置文件</title>
    <link href="http://yoursite.com/2019/12/18/vimrc/"/>
    <id>http://yoursite.com/2019/12/18/vimrc/</id>
    <published>2019-12-17T16:00:00.000Z</published>
    <updated>2019-12-19T09:19:22.865Z</updated>
    
    <content type="html"><![CDATA[<p>替换了本地的自带的vi </p><p>采用了 macvim</p><p>安装方法通过 brew </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install macvim</span><br></pre></td></tr></table></figure><p>安装过程需要xcode的支持 </p><p>下载时间比较长耐心等待下 可能会报错 具体解决原有看报错后的日志</p><p>之后需要修改.bash_profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias vi=vim</span><br><span class="line">alias vim=mvim</span><br><span class="line">alias mvim=&apos;/usr/local/bin/mvim -v&apos;</span><br></pre></td></tr></table></figure><p>安装完成后 去配置vim的 .vimrc文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">&quot;=========================================================================</span><br><span class="line">&quot; DesCRiption: 适合自己使用的vimrc文件，for Linux/Windows, GUI/Console</span><br><span class="line">&quot;</span><br><span class="line">&quot; Last Change: 2019年08月02日 15时13分 </span><br><span class="line">&quot;</span><br><span class="line">&quot; Version: 1.80</span><br><span class="line">&quot;</span><br><span class="line">&quot;=========================================================================</span><br><span class="line"></span><br><span class="line">set nocompatible &quot; 关闭 vi 兼容模式</span><br><span class="line">syntax on &quot; 自动语法高亮</span><br><span class="line">set number &quot; 显示行号</span><br><span class="line">set cursorline &quot; 突出显示当前行</span><br><span class="line">set ruler &quot; 打开状态栏标尺</span><br><span class="line">set shiftwidth=4 &quot; 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4</span><br><span class="line">set softtabstop=4 &quot; 使得按退格键时可以一次删掉 4 个空格</span><br><span class="line">set tabstop=4 &quot; 设定 tab 长度为 4</span><br><span class="line">set nobackup &quot; 覆盖文件时不备份</span><br><span class="line">set autochdir &quot; 自动切换当前目录为当前文件所在的目录</span><br><span class="line">filetype plugin indent on &quot; 开启插件</span><br><span class="line">set backupcopy=yes &quot; 设置备份时的行为为覆盖</span><br><span class="line">set ignorecase smartcase &quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感</span><br><span class="line">set nowrapscan &quot; 禁止在搜索到文件两端时重新搜索</span><br><span class="line">set incsearch &quot; 输入搜索内容时就显示搜索结果</span><br><span class="line">set hlsearch &quot; 搜索时高亮显示被找到的文本</span><br><span class="line">set noerrorbells &quot; 关闭错误信息响铃</span><br><span class="line">set novisualbell &quot; 关闭使用可视响铃代替呼叫</span><br><span class="line">set t_vb= &quot; 置空错误铃声的终端代码</span><br><span class="line">&quot; set showmatch &quot; 插入括号时，短暂地跳转到匹配的对应括号</span><br><span class="line">&quot; set matchtime=2 &quot; 短暂跳转到匹配括号的时间</span><br><span class="line">set magic &quot; 设置魔术</span><br><span class="line">set hidden &quot; 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存</span><br><span class="line">set guioptions-=T &quot; 隐藏工具栏</span><br><span class="line">set guioptions-=m &quot; 隐藏菜单栏</span><br><span class="line">set smartindent &quot; 开启新行时使用智能自动缩进</span><br><span class="line">set backspace=indent,eol,start</span><br><span class="line">&quot; 不设定在插入状态无法用退格键和 Delete 键删除回车符</span><br><span class="line">set cmdheight=1 &quot; 设定命令行的行数为 1</span><br><span class="line">set laststatus=2 &quot; 显示状态栏 (默认值为 1, 无法显示状态栏)</span><br><span class="line">set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\ </span><br><span class="line">&quot; 设置在状态行显示的信息</span><br><span class="line">set foldenable &quot; 开始折叠</span><br><span class="line">set foldmethod=syntax &quot; 设置语法折叠</span><br><span class="line">set foldcolumn=0 &quot; 设置折叠区域的宽度</span><br><span class="line">setlocal foldlevel=1 &quot; 设置折叠层数为</span><br><span class="line">&quot; set foldclose=all &quot; 设置为自动关闭折叠 </span><br><span class="line">&quot; nnoremap &lt;space&gt; @=((foldclosed(line(&apos;.&apos;)) &lt; 0) ? &apos;zc&apos; : &apos;zo&apos;)&lt;CR&gt;</span><br><span class="line">&quot; 用空格键来开关折叠</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; return OS type, eg: windows, or linux, mac, et.st..</span><br><span class="line">function! MySys()</span><br><span class="line">if has(&quot;win16&quot;) || has(&quot;win32&quot;) || has(&quot;win64&quot;) || has(&quot;win95&quot;)</span><br><span class="line">return &quot;windows&quot;</span><br><span class="line">elseif has(&quot;unix&quot;)</span><br><span class="line">return &quot;linux&quot;</span><br><span class="line">endif</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">&quot; 用户目录变量$VIMFILES</span><br><span class="line">if MySys() == &quot;windows&quot;</span><br><span class="line">let $VIMFILES = $VIM.&apos;/vimfiles&apos;</span><br><span class="line">elseif MySys() == &quot;linux&quot;</span><br><span class="line">let $VIMFILES = $HOME.&apos;/.vim&apos;</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; 设定doc文档目录</span><br><span class="line">let helptags=$VIMFILES.&apos;/doc&apos;</span><br><span class="line"></span><br><span class="line">&quot; 设置字体 以及中文支持</span><br><span class="line">if has(&quot;win32&quot;)</span><br><span class="line">set guifont=Inconsolata:h12:cANSI</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; 配置多语言环境</span><br><span class="line">if has(&quot;multi_byte&quot;)</span><br><span class="line">&quot; UTF-8 编码</span><br><span class="line">set encoding=utf-8</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set formatoptions+=mM</span><br><span class="line">set fencs=utf-8,gbk</span><br><span class="line"></span><br><span class="line">if v:lang =~? &apos;^\(zh\)\|\(ja\)\|\(ko\)&apos;</span><br><span class="line">set ambiwidth=double</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if has(&quot;win32&quot;)</span><br><span class="line">source $VIMRUNTIME/delmenu.vim</span><br><span class="line">source $VIMRUNTIME/menu.vim</span><br><span class="line">language messages zh_CN.utf-8</span><br><span class="line">endif</span><br><span class="line">else</span><br><span class="line">echoerr &quot;Sorry, this version of (g)vim was not compiled with +multi_byte&quot;</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; Buffers操作快捷方式!</span><br><span class="line">nnoremap &lt;C-RETURN&gt; :bnext&lt;CR&gt;</span><br><span class="line">nnoremap &lt;C-S-RETURN&gt; :bprevious&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; Tab操作快捷方式!</span><br><span class="line">nnoremap &lt;C-TAB&gt; :tabnext&lt;CR&gt;</span><br><span class="line">nnoremap &lt;C-S-TAB&gt; :tabprev&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot;关于tab的快捷键</span><br><span class="line">&quot; map tn :tabnext&lt;cr&gt;</span><br><span class="line">&quot; map tp :tabprevious&lt;cr&gt;</span><br><span class="line">&quot; map td :tabnew .&lt;cr&gt;</span><br><span class="line">&quot; map te :tabedit</span><br><span class="line">&quot; map tc :tabclose&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot;窗口分割时,进行切换的按键热键需要连接两次,比如从下方窗口移动</span><br><span class="line">&quot;光标到上方窗口,需要&lt;c-w&gt;&lt;c-w&gt;k,非常麻烦,现在重映射为&lt;c-k&gt;,切换的</span><br><span class="line">&quot;时候会变得非常方便.</span><br><span class="line">nnoremap &lt;C-h&gt; &lt;C-w&gt;h</span><br><span class="line">nnoremap &lt;C-j&gt; &lt;C-w&gt;j</span><br><span class="line">nnoremap &lt;C-k&gt; &lt;C-w&gt;k</span><br><span class="line">nnoremap &lt;C-l&gt; &lt;C-w&gt;l</span><br><span class="line"></span><br><span class="line">&quot;一些不错的映射转换语法（如果在一个文件中混合了不同语言时有用）</span><br><span class="line">nnoremap &lt;leader&gt;1 :set filetype=xhtml&lt;CR&gt;</span><br><span class="line">nnoremap &lt;leader&gt;2 :set filetype=css&lt;CR&gt;</span><br><span class="line">nnoremap &lt;leader&gt;3 :set filetype=javascript&lt;CR&gt;</span><br><span class="line">nnoremap &lt;leader&gt;4 :set filetype=php&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; set fileformats=unix,dos,mac</span><br><span class="line">&quot; nmap &lt;leader&gt;fd :se fileformat=dos&lt;CR&gt;</span><br><span class="line">&quot; nmap &lt;leader&gt;fu :se fileformat=unix&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; use Ctrl+[l|n|p|cc] to list|next|previous|jump to count the result</span><br><span class="line">&quot; map &lt;C-x&gt;l &lt;ESC&gt;:cl&lt;CR&gt;</span><br><span class="line">&quot; map &lt;C-x&gt;n &lt;ESC&gt;:cn&lt;CR&gt;</span><br><span class="line">&quot; map &lt;C-x&gt;p &lt;ESC&gt;:cp&lt;CR&gt;</span><br><span class="line">&quot; map &lt;C-x&gt;c &lt;ESC&gt;:cc&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; 让 Tohtml 产生有 CSS 语法的 html</span><br><span class="line">&quot; syntax/2html.vim，可以用:runtime! syntax/2html.vim</span><br><span class="line">let html_use_css=1</span><br><span class="line"></span><br><span class="line">&quot; Python 文件的一般设置，比如不要 tab 等</span><br><span class="line">autocmd FileType python set tabstop=4 shiftwidth=4 expandtab</span><br><span class="line">autocmd FileType python map &lt;F12&gt; :!python %&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 选中状态下 Ctrl+c 复制</span><br><span class="line">vmap &lt;C-c&gt; &quot;+y</span><br><span class="line"></span><br><span class="line">&quot; 打开javascript折叠</span><br><span class="line">let b:javascript_fold=1</span><br><span class="line">&quot; 打开javascript对dom、html和css的支持</span><br><span class="line">let javascript_enable_domhtmlcss=1</span><br><span class="line">&quot; 设置字典 ~/.vim/dict/文件的路径</span><br><span class="line">autocmd filetype javascript set dictionary=$VIMFILES/dict/javascript.dict</span><br><span class="line">autocmd filetype css set dictionary=$VIMFILES/dict/css.dict</span><br><span class="line">autocmd filetype php set dictionary=$VIMFILES/dict/php.dict</span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - bufexplorer.vim Buffers切换</span><br><span class="line">&quot; \be 全屏方式查看全部打开的文件列表</span><br><span class="line">&quot; \bv 左右方式查看 \bs 上下方式查看</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - taglist.vim 查看函数列表，需要ctags程序</span><br><span class="line">&quot; F4 打开隐藏taglist窗口</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">if MySys() == &quot;windows&quot; &quot; 设定windows系统中ctags程序的位置</span><br><span class="line">let Tlist_Ctags_Cmd = &apos;&quot;&apos;.$VIMRUNTIME.&apos;/ctags.exe&quot;&apos;</span><br><span class="line">elseif MySys() == &quot;linux&quot; &quot; 设定windows系统中ctags程序的位置</span><br><span class="line">let Tlist_Ctags_Cmd = &apos;/usr/bin/ctags&apos;</span><br><span class="line">endif</span><br><span class="line">nnoremap &lt;silent&gt;&lt;F4&gt; :TlistToggle&lt;CR&gt;</span><br><span class="line">let Tlist_Show_One_File = 1 &quot; 不同时显示多个文件的tag，只显示当前文件的</span><br><span class="line">let Tlist_Exit_OnlyWindow = 1 &quot; 如果taglist窗口是最后一个窗口，则退出vim</span><br><span class="line">let Tlist_Use_Right_Window = 1 &quot; 在右侧窗口中显示taglist窗口</span><br><span class="line">let Tlist_File_Fold_Auto_Close=1 &quot; 自动折叠当前非编辑文件的方法列表</span><br><span class="line">let Tlist_Auto_Open = 0</span><br><span class="line">let Tlist_Auto_Update = 1</span><br><span class="line">let Tlist_Hightlight_Tag_On_BufEnter = 1</span><br><span class="line">let Tlist_Enable_Fold_Column = 0</span><br><span class="line">let Tlist_Process_File_Always = 1</span><br><span class="line">let Tlist_Display_Prototype = 0</span><br><span class="line">let Tlist_Compact_Format = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - mark.vim 给各种tags标记不同的颜色，便于观看调式的插件。</span><br><span class="line">&quot; \m mark or unmark the word under (or before) the cursor</span><br><span class="line">&quot; \r manually input a regular expression. 用于搜索.</span><br><span class="line">&quot; \n clear this mark (i.e. the mark under the cursor), or clear all highlighted marks .</span><br><span class="line">&quot; \* 当前MarkWord的下一个 \# 当前MarkWord的上一个</span><br><span class="line">&quot; \/ 所有MarkWords的下一个 \? 所有MarkWords的上一个</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - NERD_tree.vim 以树状方式浏览系统中的文件和目录</span><br><span class="line">&quot; :ERDtree 打开NERD_tree :NERDtreeClose 关闭NERD_tree</span><br><span class="line">&quot; o 打开关闭文件或者目录 t 在标签页中打开</span><br><span class="line">&quot; T 在后台标签页中打开 ! 执行此文件</span><br><span class="line">&quot; p 到上层目录 P 到根目录</span><br><span class="line">&quot; K 到第一个节点 J 到最后一个节点</span><br><span class="line">&quot; u 打开上层目录 m 显示文件系统菜单（添加、删除、移动操作）</span><br><span class="line">&quot; r 递归刷新当前目录 R 递归刷新当前根目录</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; F3 NERDTree 切换</span><br><span class="line">map &lt;F3&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">imap &lt;F3&gt; &lt;ESC&gt;:NERDTreeToggle&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - NERD_commenter.vim 注释代码用的，</span><br><span class="line">&quot; [count],cc 光标以下count行逐行添加注释(7,cc)</span><br><span class="line">&quot; [count],cu 光标以下count行逐行取消注释(7,cu)</span><br><span class="line">&quot; [count],cm 光标以下count行尝试添加块注释(7,cm)</span><br><span class="line">&quot; ,cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释。</span><br><span class="line">&quot; 注：count参数可选，无则默认为选中行或当前行</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">let NERDSpaceDelims=1 &quot; 让注释符与语句之间留一个空格</span><br><span class="line">let NERDCompactSexyComs=1 &quot; 多行注释时样子更好看</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - DoxygenToolkit.vim 由注释生成文档，并且能够快速生成函数标准注释</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">let g:DoxygenToolkit_authorName=&quot;Asins - asinsimple AT gmail DOT com&quot;</span><br><span class="line">let g:DoxygenToolkit_briefTag_funcName=&quot;yes&quot;</span><br><span class="line">map &lt;leader&gt;da :DoxAuthor&lt;CR&gt;</span><br><span class="line">map &lt;leader&gt;df :Dox&lt;CR&gt;</span><br><span class="line">map &lt;leader&gt;db :DoxBlock&lt;CR&gt;</span><br><span class="line">map &lt;leader&gt;dc a /* */&lt;LEFT&gt;&lt;LEFT&gt;&lt;LEFT&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin – ZenCoding.vim 很酷的插件，HTML代码生成</span><br><span class="line">&quot; 插件最新版：http://github.com/mattn/zencoding-vim</span><br><span class="line">&quot; 常用命令可看：http://nootn.com/blog/Tool/23/</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin – checksyntax.vim JavaScript常见语法错误检查</span><br><span class="line">&quot; 默认快捷方式为 F5</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">let g:checksyntax_auto = 0 &quot; 不自动检查</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - NeoComplCache.vim 自动补全插件</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">let g:AutoComplPop_NotEnableAtStartup = 1</span><br><span class="line">let g:NeoComplCache_EnableAtStartup = 1</span><br><span class="line">let g:NeoComplCache_SmartCase = 1</span><br><span class="line">let g:NeoComplCache_TagsAutoUpdate = 1</span><br><span class="line">let g:NeoComplCache_EnableInfo = 1</span><br><span class="line">let g:NeoComplCache_EnableCamelCaseCompletion = 1</span><br><span class="line">let g:NeoComplCache_MinSyntaxLength = 3</span><br><span class="line">let g:NeoComplCache_EnableSkipCompletion = 1</span><br><span class="line">let g:NeoComplCache_SkipInputTime = &apos;0.5&apos;</span><br><span class="line">let g:NeoComplCache_SnippetsDir = $VIMFILES.&apos;/snippets&apos;</span><br><span class="line">&quot; &lt;TAB&gt; completion.</span><br><span class="line">inoremap &lt;expr&gt;&lt;TAB&gt; pumvisible() ? &quot;\&lt;C-n&gt;&quot; : &quot;\&lt;TAB&gt;&quot;</span><br><span class="line">&quot; snippets expand key</span><br><span class="line">imap &lt;silent&gt; &lt;C-e&gt; &lt;Plug&gt;(neocomplcache_snippets_expand)</span><br><span class="line">smap &lt;silent&gt; &lt;C-e&gt; &lt;Plug&gt;(neocomplcache_snippets_expand)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - matchit.vim 对%命令进行扩展使得能在嵌套标签和语句之间跳转</span><br><span class="line">&quot; % 正向匹配 g% 反向匹配</span><br><span class="line">&quot; [% 定位块首 ]% 定位块尾</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin - vcscommand.vim 对%命令进行扩展使得能在嵌套标签和语句之间跳转</span><br><span class="line">&quot; SVN/git管理工具</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot;-----------------------------------------------------------------</span><br><span class="line">&quot; plugin – a.vim</span><br><span class="line">&quot;----------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">&quot;让vimrc配置变更立即生效</span><br><span class="line">autocmd BufWritePost $MYVIMRC source $MYVIMRC-</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;替换了本地的自带的vi &lt;/p&gt;
&lt;p&gt;采用了 macvim&lt;/p&gt;
&lt;p&gt;安装方法通过 brew &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="vim" scheme="http://yoursite.com/categories/vim/"/>
    
    
  </entry>
  
  <entry>
    <title>spring cloud alibaba</title>
    <link href="http://yoursite.com/2019/12/16/alibaba/"/>
    <id>http://yoursite.com/2019/12/16/alibaba/</id>
    <published>2019-12-15T16:00:00.000Z</published>
    <updated>2019-12-16T06:09:32.591Z</updated>
    
    <content type="html"><![CDATA[<p>spring cloud alibaba </p><p>nacos  远程配置 | 服务发现和注册<br>ribbon 负载均衡<br>sentinel 熔断监控<br>gateway  网关<br>skywalking 链路追踪<br>rockertMQ 异步通讯<br>seata  分布式事务管理<br>dubbo RPC框架 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;spring cloud alibaba &lt;/p&gt;
&lt;p&gt;nacos  远程配置 | 服务发现和注册&lt;br&gt;ribbon 负载均衡&lt;br&gt;sentinel 熔断监控&lt;br&gt;gateway  网关&lt;br&gt;skywalking 链路追踪&lt;br&gt;rockertMQ 异步通讯&lt;br
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>idea 显示run dashboard</title>
    <link href="http://yoursite.com/2019/11/20/ideaRun/"/>
    <id>http://yoursite.com/2019/11/20/ideaRun/</id>
    <published>2019-11-19T16:00:00.000Z</published>
    <updated>2019-12-13T10:13:08.733Z</updated>
    
    <content type="html"><![CDATA[<p>在最上面的 help -&gt; edit custom VM  options </p><p>在打开的xml里面添加</p><p>-Dide.run.dashboard=true</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在最上面的 help -&amp;gt; edit custom VM  options &lt;/p&gt;
&lt;p&gt;在打开的xml里面添加&lt;/p&gt;
&lt;p&gt;-Dide.run.dashboard=true&lt;/p&gt;

      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="idea" scheme="http://yoursite.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>博客MD模板应用</title>
    <link href="http://yoursite.com/2019/10/08/tamplate/"/>
    <id>http://yoursite.com/2019/10/08/tamplate/</id>
    <published>2019-10-07T16:00:00.000Z</published>
    <updated>2019-12-27T09:23:24.826Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="literal-asterisks-转义"><a href="#literal-asterisks-转义" class="headerlink" title="\*literal asterisks\* 转义"></a>\*literal asterisks\* 转义</h1></blockquote><p>*literal asterisks*</p><blockquote><h1 id="MD-语法-加粗-加粗"><a href="#MD-语法-加粗-加粗" class="headerlink" title="MD 语法 加粗 **加粗**"></a>MD 语法 加粗 **加粗**</h1></blockquote><p><strong>比较粗</strong></p><blockquote><h1 id="MD-语法-斜体-斜体"><a href="#MD-语法-斜体-斜体" class="headerlink" title="MD 语法 斜体 *斜体*"></a>MD 语法 斜体 *斜体*</h1></blockquote><p><em>本来就是斜的</em></p><blockquote><h1 id="MD-语法-列表-1-2-3"><a href="#MD-语法-列表-1-2-3" class="headerlink" title="MD 语法 列表 1. 2. 3."></a>MD 语法 列表 1. 2. 3.</h1></blockquote><ol><li>ni shuo ni shi shui ?</li><li>ni bushi shuo ni me ?</li><li>wo xi huan de shi ni !</li></ol><blockquote><h1 id="MD-语法-列表-XXX-XXX-XXX"><a href="#MD-语法-列表-XXX-XXX-XXX" class="headerlink" title="MD 语法 列表 -XXX -XXX -XXX"></a>MD 语法 列表 -XXX -XXX -XXX</h1></blockquote><ul><li>wo bu shi yi ge haoren</li><li>na ni shi shen me ?</li><li>wo shi dog</li></ul><blockquote><h1 id="MD-语法-分割线-代表一条分割线"><a href="#MD-语法-分割线-代表一条分割线" class="headerlink" title="MD 语法 分割线 *** 代表一条分割线"></a>MD 语法 分割线 *** 代表一条分割线</h1></blockquote><hr><hr><blockquote><h1 id="MD-语法-A-标签-A-标签显示的名称-链接地址"><a href="#MD-语法-A-标签-A-标签显示的名称-链接地址" class="headerlink" title="MD 语法 A 标签 [A 标签显示的名称](链接地址)"></a>MD 语法 A 标签 [A 标签显示的名称](链接地址)</h1></blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">baidu</a></p><blockquote><h1 id="MD-语法-图片-图片说明-图片地址"><a href="#MD-语法-图片-图片说明-图片地址" class="headerlink" title="MD 语法 图片 ![ 图片说明 ](图片地址)"></a>MD 语法 图片 ![ 图片说明 ](图片地址)</h1></blockquote><p><img src="/img/banner.jpg" alt="img"></p><blockquote><h1 id="MD-语法-编写代码-三个"><a href="#MD-语法-编写代码-三个" class="headerlink" title="MD 语法 编写代码 三个 `"></a>MD 语法 编写代码 三个 `</h1></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  <span class="title">print</span><span class="params">(<span class="string">'asd'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">test</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><h1 id="MD-语法-表格"><a href="#MD-语法-表格" class="headerlink" title="MD 语法 表格"></a>MD 语法 表格</h1></blockquote><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr></tbody></table><blockquote><h1 id="MD-语法-标题-一个-号是一级标题-依此类推"><a href="#MD-语法-标题-一个-号是一级标题-依此类推" class="headerlink" title="MD 语法 标题 一个#号是一级标题 依此类推"></a>MD 语法 标题 一个#号是一级标题 依此类推</h1></blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h1 id=&quot;literal-asterisks-转义&quot;&gt;&lt;a href=&quot;#literal-asterisks-转义&quot; class=&quot;headerlink&quot; title=&quot;\*literal asterisks\* 转义&quot;&gt;&lt;/a&gt;\*literal
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>docker基本语法</title>
    <link href="http://yoursite.com/2019/10/08/dockerShell/"/>
    <id>http://yoursite.com/2019/10/08/dockerShell/</id>
    <published>2019-10-07T16:00:00.000Z</published>
    <updated>2019-12-13T10:12:52.281Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>查看所有正在运行容器 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker ps</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有容器 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker ps -a</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有容器ID </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a -q</span><br></pre></td></tr></table></figure></li><li><p>启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker start [NAME]</span><br></pre></td></tr></table></figure></li><li><p>stop停止所有容器 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker stop </span><br><span class="line">$(docker ps -a -q)</span><br></pre></td></tr></table></figure></li><li><p>remove删除所有容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure></li><li><p>run创建一个新的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it [NAME] /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>Exec 进入一个已经存在的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 217a29f3495a /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>查看容器启动日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs [容器ID]</span><br></pre></td></tr></table></figure></li></ul><p>-删除容器镜像  image<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi IMAGE [IMAGE...]</span><br><span class="line">sudo docker rmi centos:latest</span><br></pre></td></tr></table></figure></p><ul><li><p>强制删除 实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f</span><br></pre></td></tr></table></figure></li><li><p>启动一个实例Container </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br><span class="line">sudo docker run -t -i contos /bin/bash</span><br><span class="line">sudo docker run  -p 8080:8080 -d [name]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看所有正在运行容器 &lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>git 忽略已经提交和没提交的文件</title>
    <link href="http://yoursite.com/2019/10/08/gitignore/"/>
    <id>http://yoursite.com/2019/10/08/gitignore/</id>
    <published>2019-10-07T16:00:00.000Z</published>
    <updated>2019-12-27T09:23:18.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="没有提交的"><a href="#没有提交的" class="headerlink" title="没有提交的"></a>没有提交的</h1><p>其实一直都知道有这么个功能 但是一直都是手写没有记录 </p><p>可以先去看下github官方提供的gitignore  里面有各种语言的 gitignore</p><p><a href="https://github.com/github/gitignore" target="_blank" rel="noopener">https://github.com/github/gitignore</a></p><p>自己个性化的话 可以在上面的文件基础上修改</p><p>在Git工作区的根目录下创建一个特殊的 .gitignore</p><p>下面是我自己使用的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/target/**</span><br><span class="line">/target</span><br><span class="line">target</span><br><span class="line">!.mvn/wrapper/maven-wrapper.jar</span><br><span class="line"></span><br><span class="line">###STS###</span><br><span class="line">.apt_generated</span><br><span class="line">.classpath</span><br><span class="line">.factorypath</span><br><span class="line">.project</span><br><span class="line">.settings</span><br><span class="line">.springBeans</span><br><span class="line">.sts4-cache</span><br><span class="line"></span><br><span class="line">###IntelliJIDEA###</span><br><span class="line">.idea</span><br><span class="line">*.iws</span><br><span class="line">*.iml</span><br><span class="line">*.ipr</span><br><span class="line"></span><br><span class="line">###NetBeans###</span><br><span class="line">/nbproject/private/</span><br><span class="line">/build/</span><br><span class="line">/nbbuild/</span><br><span class="line">/dist/</span><br><span class="line">/nbdist/</span><br><span class="line">/.nb-gradle/</span><br><span class="line"></span><br><span class="line">#Compiledclassfile</span><br><span class="line">*.class</span><br><span class="line"></span><br><span class="line">#Logfile</span><br><span class="line">*.log</span><br><span class="line"></span><br><span class="line">#BlueJfiles</span><br><span class="line">*.ctxt</span><br><span class="line"></span><br><span class="line">#MobileToolsforJava(J2ME)</span><br><span class="line">.mtj.tmp/</span><br><span class="line"></span><br><span class="line">#PackageFiles#</span><br><span class="line">*.jar</span><br><span class="line">*.war</span><br><span class="line">*.nar</span><br><span class="line">*.ear</span><br><span class="line">*.zip</span><br><span class="line">*.tar.gz</span><br><span class="line">*.rar</span><br><span class="line"></span><br><span class="line"># virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml</span><br><span class="line">hs_err_pid*</span><br><span class="line">.pdf</span><br><span class="line">.zip</span><br><span class="line">.doc</span><br></pre></td></tr></table></figure></p><p>下面是一些语法使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">• bin/: 忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span><br><span class="line"></span><br><span class="line">• /bin: 忽略根目录下的bin文件</span><br><span class="line"></span><br><span class="line">• /*.c: 忽略 cat.c，不忽略 build/cat.c</span><br><span class="line"></span><br><span class="line">• debug/*.obj: 忽略 debug/io.obj，不忽略 debug/common/io.obj 和 tools/debug/io.obj</span><br><span class="line"></span><br><span class="line">• **/foo: 忽略/foo, a/foo, a/b/foo等</span><br><span class="line"></span><br><span class="line">• a/**/b: 忽略a/b, a/x/b, a/x/y/b等</span><br><span class="line"></span><br><span class="line">• !/bin/run.sh: 不忽略 bin 目录下的 run.sh 文件</span><br><span class="line"></span><br><span class="line">• *.log: 忽略所有 .log 文件</span><br><span class="line"></span><br><span class="line">• config.php: 忽略当前路径的 config.php 文件</span><br></pre></td></tr></table></figure></p><h1 id="已经提交但是本地在修改需要忽略的"><a href="#已经提交但是本地在修改需要忽略的" class="headerlink" title="已经提交但是本地在修改需要忽略的"></a>已经提交但是本地在修改需要忽略的</h1><p>值得注意的是中央仓库已经存在该文件后 需要取消追踪<br>对某个文件取消跟踪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached  readme1.txt # 删除readme1.txt的跟踪，并保留在本地。</span><br><span class="line"></span><br><span class="line">git add -A # 这里是将所有的改动提交到git</span><br><span class="line"></span><br><span class="line">git commit -m &apos;update local file&apos;</span><br></pre></td></tr></table></figure><p>然后git commit 即可。但是git status查看状态时还是会列出来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;没有提交的&quot;&gt;&lt;a href=&quot;#没有提交的&quot; class=&quot;headerlink&quot; title=&quot;没有提交的&quot;&gt;&lt;/a&gt;没有提交的&lt;/h1&gt;&lt;p&gt;其实一直都知道有这么个功能 但是一直都是手写没有记录 &lt;/p&gt;
&lt;p&gt;可以先去看下github官方提供的gitign
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>基于SLF4J MDC机制配合AOP实现日志的链路追踪</title>
    <link href="http://yoursite.com/2019/05/31/slf4jMDC/"/>
    <id>http://yoursite.com/2019/05/31/slf4jMDC/</id>
    <published>2019-05-30T16:00:00.000Z</published>
    <updated>2019-11-08T01:30:21.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>一个合格的项目必须要有日志来支撑,日志不但能记录输入输出,当系统有问题的时候我们还需要做线上问题的排查.</p><p>在一个正常的项目中日志里包含了各种各样的接口及其他无关的数据日志,那么我们如何快速定位单次请求中所有的日志呢 ?</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>当我们设计一个系统日志的时候</p><p>首先我们需要解决以下几个问题</p><ol><li><p>哪些数据需要写进日志中</p></li><li><p>日志如何分类 按天还是按周</p></li><li><p>如何区分每次请求</p></li><li><p>请求参数及返回值需不需要打印</p></li><li><p>如何进行多环节配置</p></li></ol><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>按照上面的问题我们来一个一个解决</p><p>主要思路是</p><ol><li><p>AOP 负责切入每个请求及参数打印</p></li><li><p>在进入 controller 之前打印本次请求的各种参数</p></li><li><p>MDC 添加 hashCode 来做参数校验</p></li><li><p>日志使用 logback 配置</p></li><li><p>日志按天分类,每天生成一个日志</p></li><li><p>利用 thread 来区分每次请求</p></li><li><p>springProfile 来做多环境配置</p></li></ol><p>aop 有两种<br>CGLIB,JDK 都是动态代理 今天不讨论这两者的区别 我使用的是 CGLIB</p><p>pom 中引入 SpringBoot 的 web 模块和使用 AOP 相关的依赖：</p><p>定义切面类，实现 web 层的日志切面</p><p>对所有的 web 请求做切面来记录日志</p><h1 id="第一种-AOP-上-logback-的输出"><a href="#第一种-AOP-上-logback-的输出" class="headerlink" title="第一种 AOP 上 logback 的输出"></a>第一种 AOP 上 logback 的输出</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接收到请求，记录请求内容</span></span><br><span class="line">     ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">     <span class="keyword">if</span> (attributes != <span class="keyword">null</span> &amp;&amp; joinPoint != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">         HttpServletRequest request = attributes.getRequest();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 记录请求内容</span></span><br><span class="line">         log.info( <span class="string">"1. 对象请求的URL : "</span> + request.getRequestURL().toString());</span><br><span class="line">         log.info( <span class="string">"2. 请求方法名称 : "</span> + request.getMethod());</span><br><span class="line">         log.info( <span class="string">"3. 对方IP地址 : "</span> + request.getRemoteAddr());</span><br><span class="line">         log.info( <span class="string">"4. 运行的java类 : "</span> + joinPoint.getSignature().getDeclaringTypeName() + <span class="string">"."</span> + joinPoint.getSignature().getName());</span><br><span class="line">         <span class="keyword">try</span>&#123;</span><br><span class="line">             log.info(<span class="string">"5. 请求参数 : "</span> + JSONObject.toJSONString(joinPoint.getArgs() ));</span><br><span class="line">         &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">             log.info(<span class="string">"请求参数切点无法切入"</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> CheckException(<span class="string">"网络请求出错, 请清空缓存重新尝试. "</span>);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="第二种-request-HashCode-唯一标示"><a href="#第二种-request-HashCode-唯一标示" class="headerlink" title="第二种 request.HashCode 唯一标示"></a>第二种 request.HashCode 唯一标示</h1><p>在获得</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">log.info(request.hashCode()+ <span class="string">"5. 请求参数 : "</span> + JSONObject.toJSONString(joinPoint.getArgs() ));</span><br></pre></td></tr></table></figure><h1 id="第三种-基于-SLF4J-的-MDC-机制"><a href="#第三种-基于-SLF4J-的-MDC-机制" class="headerlink" title="第三种 基于 SLF4J 的 MDC 机制"></a>第三种 基于 SLF4J 的 MDC 机制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MDC.put(<span class="string">"THREAD_ID"</span>, <span class="string">"userId"</span>+ userService.getId() );</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%date [%thread] %-5level %logger&#123;80&#125;  %X&#123;THREAD_ID&#125; || %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="第四种-结合-HashCode-和-MDC"><a href="#第四种-结合-HashCode-和-MDC" class="headerlink" title="第四种 结合 HashCode 和 MDC"></a>第四种 结合 HashCode 和 MDC</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MDC.put(<span class="string">"THREAD_ID"</span>, <span class="string">""</span>+request.hashCode());</span><br></pre></td></tr></table></figure><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">14</span>:<span class="number">27</span>,<span class="number">743</span> [main] INFO  com.zwkj.zhxt.ZhxtApplication || Started ZhxtApplication in <span class="number">48.489</span> seconds (JVM running <span class="keyword">for</span> <span class="number">56.375</span>)</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">310</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">1</span>. 对象请求的URL : http:<span class="comment">//localhost:8088/zhxtotc/sys-user/login</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">313</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2</span>. 请求方法名称 : POST</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">314</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">3</span>. 对方IP地址 : <span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">323</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">4</span>. 运行的java类 : com.zwkj.zhxt.controller.SysUserController.findSysUser</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">585</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2825564545</span>. 请求参数 : [&#123;<span class="string">"code"</span>:<span class="string">"string"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>,<span class="string">"phone"</span>:<span class="string">"string"</span>,<span class="string">"username"</span>:<span class="string">"admin12"</span>&#125;]</span><br><span class="line"> Time：<span class="number">168</span> ms - ID：com.zwkj.zhxt.mvc.sysuser.mapper.SysUserMapper.selectOne</span><br><span class="line">Execute SQL：SELECT id,username,password,nickname,role_id,create_time,update_time,delete_status,user_id FROM sys_user WHERE username = <span class="string">'admin12'</span> AND password = <span class="string">'4QrcOUm6Wau+VuBX8g+IPg=='</span></span><br><span class="line"></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">30</span>,<span class="number">860</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="meta">@Around</span>:结果是 :ResultBean com.zwkj.zhxt.controller.SysUserController.findSysUser(UserModel) use time: <span class="number">2551</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">30</span>,<span class="number">861</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">282556454</span>: 方法的返回值 : ResultBean(msg=success, code=<span class="number">0</span>, data=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub3ciOiIxNTU5NjE0NTMwMjE2emh4dCIsImtleSI6InVzZXIxMiJ9.ae7ra7hvDSp5N6YfuGYzr8ULeq7Zr5OuC_4PbybqceY)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">401</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">1</span>. 对象请求的URL : http:<span class="comment">//localhost:8088/zhxtotc/sys-user/login</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">401</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2</span>. 请求方法名称 : POST</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">3</span>. 对方IP地址 : <span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">4</span>. 运行的java类 : com.zwkj.zhxt.controller.SysUserController.findSysUser</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2825564545</span>. 请求参数 : [&#123;<span class="string">"code"</span>:<span class="string">"string"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>,<span class="string">"phone"</span>:<span class="string">"string"</span>,<span class="string">"username"</span>:<span class="string">"admin12"</span>&#125;]</span><br><span class="line"> Time：<span class="number">151</span> ms - ID：com.zwkj.zhxt.mvc.sysuser.mapper.SysUserMapper.selectOne</span><br><span class="line">Execute SQL：SELECT id,username,password,nickname,role_id,create_time,update_time,delete_status,user_id FROM sys_user WHERE username = <span class="string">'admin12'</span> AND password = <span class="string">'4QrcOUm6Wau+VuBX8g+IPg=='</span></span><br></pre></td></tr></table></figure><blockquote><h1 id="literal-asterisks-转义"><a href="#literal-asterisks-转义" class="headerlink" title="\*literal asterisks\* 转义"></a>\*literal asterisks\* 转义</h1></blockquote><p>*literal asterisks*</p><blockquote><h1 id="MD-语法-加粗-加粗"><a href="#MD-语法-加粗-加粗" class="headerlink" title="MD 语法 加粗 **加粗**"></a>MD 语法 加粗 **加粗**</h1></blockquote><p><strong>比较粗</strong></p><blockquote><h1 id="MD-语法-斜体-斜体"><a href="#MD-语法-斜体-斜体" class="headerlink" title="MD 语法 斜体 *斜体*"></a>MD 语法 斜体 *斜体*</h1></blockquote><p><em>本来就是斜的</em></p><blockquote><h1 id="MD-语法-列表-1-2-3"><a href="#MD-语法-列表-1-2-3" class="headerlink" title="MD 语法 列表 1. 2. 3."></a>MD 语法 列表 1. 2. 3.</h1></blockquote><ol><li>ni shuo ni shi shui ?</li><li>ni bushi shuo ni me ?</li><li>wo xi huan de shi ni !</li></ol><blockquote><h1 id="MD-语法-列表-XXX-XXX-XXX"><a href="#MD-语法-列表-XXX-XXX-XXX" class="headerlink" title="MD 语法 列表 -XXX -XXX -XXX"></a>MD 语法 列表 -XXX -XXX -XXX</h1></blockquote><ul><li>wo bu shi yi ge haoren</li><li>na ni shi shen me ?</li><li>wo shi dog</li></ul><blockquote><h1 id="MD-语法-分割线-代表一条分割线"><a href="#MD-语法-分割线-代表一条分割线" class="headerlink" title="MD 语法 分割线 *** 代表一条分割线"></a>MD 语法 分割线 *** 代表一条分割线</h1></blockquote><hr><hr><hr><blockquote><h1 id="MD-语法-A-标签-A-标签显示的名称-链接地址"><a href="#MD-语法-A-标签-A-标签显示的名称-链接地址" class="headerlink" title="MD 语法 A 标签 [A 标签显示的名称](链接地址)"></a>MD 语法 A 标签 [A 标签显示的名称](链接地址)</h1></blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">baidu</a></p><blockquote><h1 id="MD-语法-图片-图片说明-图片地址"><a href="#MD-语法-图片-图片说明-图片地址" class="headerlink" title="MD 语法 图片 ![ 图片说明 ](图片地址)"></a>MD 语法 图片 ![ 图片说明 ](图片地址)</h1></blockquote><p><img src="/img/banner.jpg" alt="img"></p><blockquote><h1 id="MD-语法-编写代码-三个"><a href="#MD-语法-编写代码-三个" class="headerlink" title="MD 语法 编写代码 三个 `"></a>MD 语法 编写代码 三个 `</h1></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  <span class="title">print</span><span class="params">(<span class="string">'asd'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">test</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><h1 id="MD-语法-表格"><a href="#MD-语法-表格" class="headerlink" title="MD 语法 表格"></a>MD 语法 表格</h1></blockquote><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr></tbody></table><blockquote><h1 id="MD-语法-标题-一个-号是一级标题-依此类推"><a href="#MD-语法-标题-一个-号是一级标题-依此类推" class="headerlink" title="MD 语法 标题 一个#号是一级标题 依此类推"></a>MD 语法 标题 一个#号是一级标题 依此类推</h1></blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;一个合格的项目必须要有日志来支撑,日志不但能记录输入输出,当系统有问题的时候我们还需要做线上问题的排查.&lt;/p&gt;
&lt;p&gt;在一
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="AOP" scheme="http://yoursite.com/tags/AOP/"/>
    
      <category term="SLF4J" scheme="http://yoursite.com/tags/SLF4J/"/>
    
      <category term="MDC" scheme="http://yoursite.com/tags/MDC/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot-ioc 解析</title>
    <link href="http://yoursite.com/2019/05/22/springBootIOC/"/>
    <id>http://yoursite.com/2019/05/22/springBootIOC/</id>
    <published>2019-05-21T16:00:00.000Z</published>
    <updated>2019-11-08T01:29:08.751Z</updated>
    
    <content type="html"><![CDATA[<p>spring boot ioc 启动调用堆栈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">inject:<span class="number">177</span>, InjectionMetadata$InjectedElement (org.springframework.beans.factory.annotation)</span><br><span class="line">inject:<span class="number">90</span>, InjectionMetadata (org.springframework.beans.factory.annotation)</span><br><span class="line">postProcessProperties:<span class="number">321</span>, CommonAnnotationBeanPostProcessor (org.springframework.context.annotation)</span><br><span class="line">populateBean:<span class="number">1395</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">doCreateBean:<span class="number">592</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">createBean:<span class="number">515</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">lambda$doGetBean$<span class="number">0</span>:<span class="number">320</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getObject:-<span class="number">1</span>, <span class="number">2018260103</span> (org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$<span class="number">144</span>)</span><br><span class="line">getSingleton:<span class="number">222</span>, DefaultSingletonBeanRegistry (org.springframework.beans.factory.support)</span><br><span class="line">doGetBean:<span class="number">318</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getBean:<span class="number">199</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">resolveCandidate:<span class="number">277</span>, DependencyDescriptor (org.springframework.beans.factory.config)</span><br><span class="line">doResolveDependency:<span class="number">1247</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">resolveDependency:<span class="number">1167</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">inject:<span class="number">593</span>, AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement (org.springframework.beans.factory.annotation)</span><br><span class="line">inject:<span class="number">90</span>, InjectionMetadata (org.springframework.beans.factory.annotation)</span><br><span class="line">postProcessProperties:<span class="number">374</span>, AutowiredAnnotationBeanPostProcessor (org.springframework.beans.factory.annotation)</span><br><span class="line">populateBean:<span class="number">1395</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">doCreateBean:<span class="number">592</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">createBean:<span class="number">515</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">lambda$doGetBean$<span class="number">0</span>:<span class="number">320</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getObject:-<span class="number">1</span>, <span class="number">2018260103</span> (org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$<span class="number">144</span>)</span><br><span class="line">getSingleton:<span class="number">222</span>, DefaultSingletonBeanRegistry (org.springframework.beans.factory.support)</span><br><span class="line">doGetBean:<span class="number">318</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getBean:<span class="number">199</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">preInstantiateSingletons:<span class="number">849</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">finishBeanFactoryInitialization:<span class="number">877</span>, AbstractApplicationContext (org.springframework.context.support)</span><br><span class="line">refresh:<span class="number">549</span>, AbstractApplicationContext (org.springframework.context.support)</span><br><span class="line">refresh:<span class="number">142</span>, ServletWebServerApplicationContext (org.springframework.boot.web.servlet.context)</span><br><span class="line">refresh:<span class="number">775</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">refreshContext:<span class="number">397</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">316</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">1260</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">1248</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">main:<span class="number">26</span>, ZhxtApplication (com.zwkj.zhxt)</span><br></pre></td></tr></table></figure><p>AbstractAutowireCapableBeanFactory 320<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">configureBean</span><span class="params">(Object existingBean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">markBeanAsCreated(beanName);</span><br><span class="line">BeanDefinition mbd = getMergedBeanDefinition(beanName);</span><br><span class="line">RootBeanDefinition bd = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (mbd <span class="keyword">instanceof</span> RootBeanDefinition) &#123;</span><br><span class="line">RootBeanDefinition rbd = (RootBeanDefinition) mbd;</span><br><span class="line">bd = (rbd.isPrototype() ? rbd : rbd.cloneBeanDefinition());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bd == <span class="keyword">null</span>) &#123;</span><br><span class="line">bd = <span class="keyword">new</span> RootBeanDefinition(mbd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!bd.isPrototype()) &#123;</span><br><span class="line">bd.setScope(BeanDefinition.SCOPE_PROTOTYPE);</span><br><span class="line">bd.allowCaching = ClassUtils.isCacheSafe(ClassUtils.getUserClass(existingBean), getBeanClassLoader());</span><br><span class="line">&#125;</span><br><span class="line">BeanWrapper bw = <span class="keyword">new</span> BeanWrapperImpl(existingBean);</span><br><span class="line">initBeanWrapper(bw);</span><br><span class="line">populateBean(beanName, bd, bw);</span><br><span class="line"><span class="keyword">return</span> initializeBean(beanName, existingBean, bd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>AbstractAutowireCapableBeanFactory 1336 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PropertyValues pvs = (mbd.hasPropertyValues() ? mbd.getPropertyValues() : <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) &#123;</span><br><span class="line">MutablePropertyValues newPvs = <span class="keyword">new</span> MutablePropertyValues(pvs);</span><br><span class="line"><span class="comment">// Add property values based on autowire by name if applicable.</span></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) &#123;</span><br><span class="line">autowireByName(beanName, mbd, bw, newPvs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Add property values based on autowire by type if applicable.</span></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) &#123;</span><br><span class="line">autowireByType(beanName, mbd, bw, newPvs);</span><br><span class="line">&#125;</span><br><span class="line">pvs = newPvs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> hasInstAwareBpps = hasInstantiationAwareBeanPostProcessors();</span><br><span class="line"><span class="keyword">boolean</span> needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);</span><br><span class="line"></span><br><span class="line">PropertyDescriptor[] filteredPds = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (hasInstAwareBpps) &#123;</span><br><span class="line"><span class="keyword">if</span> (pvs == <span class="keyword">null</span>) &#123;</span><br><span class="line">pvs = mbd.getPropertyValues();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (BeanPostProcessor bp : getBeanPostProcessors()) &#123;</span><br><span class="line"><span class="keyword">if</span> (bp <span class="keyword">instanceof</span> InstantiationAwareBeanPostProcessor) &#123;</span><br><span class="line">InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;</span><br><span class="line">PropertyValues pvsToUse = ibp.postProcessProperties(pvs, bw.getWrappedInstance(), beanName);</span><br><span class="line"><span class="keyword">if</span> (pvsToUse == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (filteredPds == <span class="keyword">null</span>) &#123;</span><br><span class="line">filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);</span><br><span class="line">&#125;</span><br><span class="line">pvsToUse = ibp.postProcessPropertyValues(pvs, filteredPds, bw.getWrappedInstance(), beanName);</span><br><span class="line"><span class="keyword">if</span> (pvsToUse == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pvs = pvsToUse;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;spring boot ioc 启动调用堆栈&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="springboot" scheme="http://yoursite.com/categories/springboot/"/>
    
    
      <category term="ioc" scheme="http://yoursite.com/tags/ioc/"/>
    
  </entry>
  
  <entry>
    <title>记一次慢sql的查询记录</title>
    <link href="http://yoursite.com/2019/05/13/sqlOptimize/"/>
    <id>http://yoursite.com/2019/05/13/sqlOptimize/</id>
    <published>2019-05-12T16:00:00.000Z</published>
    <updated>2019-11-08T01:30:27.357Z</updated>
    
    <content type="html"><![CDATA[<p>本质上来讲 sql优化和数据库优化是两种优化</p><p>数据库优化包含的种类较多 软件优化,硬件优化</p><p>理论上 单个mysql数据库能够支撑的是每秒2000的并发 极限是5000</p><p>当然本次不说数据库优化 先说sql优化</p><p>sql优化一般是针对单个业务进行优化</p><p>比如秒杀 系统的订单查询 (当然一般用redis 这里只是举个例子)</p><p>或者说是对excel表格进行分析插入数据库</p><p>等等各种各样的业务</p><p>当然一个简单的sql 可能就是这样的 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> ASSIGNEE_ = <span class="string">'user1'</span></span><br></pre></td></tr></table></figure><p>但在实际业务环境中可能并不是这样</p><p>实际会复杂很多 以及很多条件</p><p>当我们在处理这样的sql的时候 应该怎么去优化以及从哪里入手</p><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>我们大家都是知道索引可以很好的帮我们来提高效率</p><p>但是具体怎么用 以及针对某个业务或者单条sql怎么优化</p><p>再说这些之前我们先针对SQL进行一些常识性优化  比如</p><h2 id="基本优化"><a href="#基本优化" class="headerlink" title="基本优化"></a>基本优化</h2><p><strong>WHERE 子句里面的列尽量被索引</strong></p><p><strong>尽量避免使用 “SELECT *”</strong></p><p><strong>如果用到分页 尽量使用物理分页 并非逻辑分页</strong></p><p><strong>join列尽量使用索引</strong></p><p><strong>order by 使用索引</strong></p><p>等等  </p><p>总之是<strong>为了避免全表扫描做出的各种操作</strong></p><p>大家应该发现索引的使用还是非常频繁的</p><p>那么具体某个sql使用了哪些索引 以及进行了什么处理操作</p><h1 id="EXPLAIN-优化"><a href="#EXPLAIN-优化" class="headerlink" title="EXPLAIN 优化"></a>EXPLAIN 优化</h1><p>我们可以用  EXPLAIN 关键字去查看执行计划</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> professor a</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> sys_attend b</span><br><span class="line"><span class="keyword">WHERE</span> a.id = b.professor_id</span><br><span class="line"><span class="keyword">AND</span> b.<span class="string">`type`</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> b.table_id = <span class="number">93353728</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> a.polling_status = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> a.status = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> (a.Member_category = <span class="number">1</span></span><br><span class="line"><span class="keyword">OR</span> a.Member_category = <span class="number">3</span>)</span><br><span class="line"><span class="keyword">AND</span> (organization_category <span class="keyword">IN</span> (<span class="number">4</span>, <span class="number">7</span>)</span><br><span class="line"><span class="keyword">OR</span> organization_categoryvice <span class="keyword">IN</span> (<span class="number">4</span>, <span class="number">7</span>))</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table</th><th style="text-align:center">type</th><th style="text-align:center">possible_keys</th><th style="text-align:center">key</th><th style="text-align:center">key_len</th><th style="text-align:center">ref</th><th style="text-align:center">rows</th><th style="text-align:center">Extra </th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">“PRIMARY”</td><td style="text-align:center">“a”</td><td style="text-align:center">“index_merge”</td><td style="text-align:center">“professor_level_index,professor_levelvice_index”</td><td style="text-align:center">“professor_level_index,professor_levelvice_index”</td><td style="text-align:center">“2,2”</td><td style="text-align:center">NULL</td><td style="text-align:center">28</td><td style="text-align:center">“Using sort_union(professor_level_index,professor_levelvice_index);</td><td>Using where”</td><td></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">“DEPENDENT SUBQUERY”</td><td style="text-align:center">“b”</td><td style="text-align:center">“ALL”</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">85</td><td style="text-align:center">“Using where”</td></tr></tbody></table><p>这张表里大概有这么几个字段</p><ol><li><p>id 执行顺序 可以重复</p><ul><li>id相同则从上往下执行</li><li>id从大到小执行</li></ul></li><li><p>select_type 搜索类型 一共有十一种 具体可以看这篇博客<a href="https://blog.csdn.net/y1193329479/article/details/78821126#27_DEPENDENT_SUBQUERY_134" target="_blank" rel="noopener">SQL_explain操作解释</a> 这里就简单的介绍常见的几种 </p><ul><li><p>第一种也是最常见到的一种 SIMPLE 简单的select查询,查询中不包含子查询或者union;</p></li><li><p>PRIMARY:查询中若包含任何复杂的子查询,最外层查询则被标记; 就是刚刚的优先级最外层则会显示PRIMARY</p></li><li><p>SUBQUERY:在select或者where列表中包含了子查询;</p></li></ul></li></ol><ol start="3"><li><p>type 显示的是访问类型，一般我们优化sql就是着重优化这个 , 是较为重要的一个指标，结果值从好到坏依次是：<br>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL。 一般来说，得保证查询至少达到range级别，最好能达到ref。 那么怎么能达到这个级别呢 </p><ul><li><p>ref:非唯一性索引扫描,返回匹配某个单独值得所有行,本质上也是一种索引访问,它返回所有匹配某个单独值的行,然而,它可能会找到多个符合条件的行,所以它应该属于查找和扫描的混合体;</p></li><li><p>range:只检索给定范围的行,使用一个索引来选择行,key列显示使用哪个索引,一般就是在你的where语句中出现了between,&lt;,&gt;,in等的查询；这种范围索引扫描比全表扫描要好,因为它只需要开始于索引的某一个点,结束于另一个点,不用扫描全部索引; 之前说的避免全表扫描就是为了这样</p></li></ul></li></ol><ol start="4"><li><p>possible_keys:显示可能会被应用到这张表的索引,一个或者多个;查询涉及到的字段上若存在索引,则该索引将被列出,但不一定被查询实际使用到;</p></li><li><p>key:实际使用到的索引.如果为null,则没有使用索引;查询中若使用了覆盖索引,则该索引仅出现在key列表中;</p></li><li><p>key_len:表示索引中使用的字节数,可通过该列计算查询中使用的索引的长度,在不损失精确性的情况下,长度越短越好; key_len显示的值为索引字段的最大可能长度,并非实际使用长度,即key_len是根据表定义计算而得,不是通过表内检索出的;</p></li><li><p>ref:显示索引的哪一列被使用了,如果可能的话,是一个常数,哪些列或常量别用于查找索引列上的值;</p></li><li><p>rows:根据表统计信息及索引选用情况,大致估算出找到所需的记录所需要读取的行数;</p></li><li><p>Extra:包含不适合在其它列中显示但十分重要的额外信息:</p><ul><li>对于这个消息栏里展示的东西有很多 一般是你的sql违反的数据库相对应的算法,他认为你的不合理</li><li>在这里就不详细解释了 当大家出现后可以百度相对应的信息 <a href="https://blog.csdn.net/poxiaonie/article/details/77757471" target="_blank" rel="noopener">MySQL中explain执行计划中额外信息字段(Extra)详解</a></li></ul></li></ol><p>那么根据这些信息我们可以查到需要优化哪些地方</p><p>说完 explain 我们可以再说说 explain extended + show warnings </p><p>在执行explain extended  之后我们在 show warnings 可以看到在数据库中我们sql的执行方式, 我们可以在这个基础上再次进行优化</p><p>我们可以看到sql的执行方式，对于分析sql还是很有帮助的。</p><p>( 8 ) SELECT ( 9 ) DISTINCT ( 11 ) &lt; Top Num &gt; &lt; select list &gt; </p><p>( 1 ) FROM [ left_table ] </p><p>( 3 ) &lt; join_type &gt; JOIN &lt; right_table &gt; </p><p>( 2 ) ON &lt; join_condition &gt; </p><p>( 4 ) WHERE &lt; where_condition &gt; </p><p>( 5 ) GROUP BY &lt; group_by_list &gt; </p><p>( 6 ) WITH &lt; CUBE | RollUP &gt; </p><p>( 7 ) HAVING &lt; having_condition &gt; </p><p>( 10 ) ORDER BY &lt; order_by_list &gt;</p><p>从优先级我们可以看出为什么order by 排序在 group by 之前不生效了</p><p>之前那条sql之后后数据库warnings的执行方式是下面这样的<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span>,</span><br><span class="line">        <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`name`</span>,</span><br><span class="line">        <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">AS</span> <span class="string">`sex`</span>,</span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`professor`</span> <span class="string">`a`</span></span><br><span class="line"><span class="keyword">WHERE</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`status`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`polling_status`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="keyword">not</span>(<span class="keyword">exists</span>(<span class="comment">/* select#2 */</span><span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`sys_attend`</span> <span class="string">`b`</span></span><br><span class="line"><span class="keyword">WHERE</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`table_id`</span> = <span class="number">93353728</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`sex`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`id`</span> = <span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`professor_id`</span>)))))</span><br><span class="line">        <span class="keyword">AND</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">OR</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> = <span class="number">3</span>))</span><br><span class="line">        <span class="keyword">AND</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">IN</span> (<span class="number">4</span>,<span class="number">7</span>))</span><br><span class="line">        <span class="keyword">OR</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">IN</span> (<span class="number">4</span>,<span class="number">7</span>)))) <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>从上面还可以看出 and 的优先级 总是高于 or </p><p>但有一点需要注意的是 exteneded得到的sql并不是 最终优化执行的sql<br>这一点可以在官方文档中得到确认<a href="https://dev.mysql.com/doc/refman/8.0/en/explain-extended.html" target="_blank" rel="noopener">Extended EXPLAIN Output Format</a><br>但从优化的角度上来讲也能帮助我们.</p><p>一般企业数据库的优化 基本上是</p><p>配硬件+差不多的sql优化+分布式+分库分表+读写分离</p><p>等等 反正一系列的操作 基本满足80%的业务场景</p><p>当然我们优化个别业务需要根据实际场景来优化</p><p>如果确实说需要高级别的维护和优化 公司会有相对应的运维或者DB来做很少需要开发者担心</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本质上来讲 sql优化和数据库优化是两种优化&lt;/p&gt;
&lt;p&gt;数据库优化包含的种类较多 软件优化,硬件优化&lt;/p&gt;
&lt;p&gt;理论上 单个mysql数据库能够支撑的是每秒2000的并发 极限是5000&lt;/p&gt;
&lt;p&gt;当然本次不说数据库优化 先说sql优化&lt;/p&gt;
&lt;p&gt;sql优化
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
      <category term="优化" scheme="http://yoursite.com/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="db" scheme="http://yoursite.com/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>launchctl自动化脚本</title>
    <link href="http://yoursite.com/2019/04/18/macLaunchctl/"/>
    <id>http://yoursite.com/2019/04/18/macLaunchctl/</id>
    <published>2019-04-17T16:00:00.000Z</published>
    <updated>2019-12-13T10:13:30.323Z</updated>
    
    <content type="html"><![CDATA[<p>启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl start con.hki.zhxtgit.plist</span><br></pre></td></tr></table></figure></p><p>查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl list | grep &apos;con&apos;</span><br></pre></td></tr></table></figure></p><p>加载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl load -w con.hki.zhxtgit.plist</span><br></pre></td></tr></table></figure></p><p>卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl unload con.hki.zhxtgit.plist</span><br></pre></td></tr></table></figure></p><p>校验语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plutil -lint  com.hki.zhxtgit.plist</span><br></pre></td></tr></table></figure></p><p>plist文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>con.hki.zhxtgit.plist<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Documents/shell/zhxtgit.sh<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Documents/shell/run.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Documents/shell/run.err<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StartCalendarInterval<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>Hour<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">integer</span>&gt;</span>15<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>Minute<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">integer</span>&gt;</span>5<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;启动&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="mac" scheme="http://yoursite.com/categories/mac/"/>
    
    
      <category term="自动化脚本" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Quartz cron语法规则及demo</title>
    <link href="http://yoursite.com/2018/12/29/quartzCron/"/>
    <id>http://yoursite.com/2018/12/29/quartzCron/</id>
    <published>2018-12-28T16:00:00.000Z</published>
    <updated>2020-01-03T03:39:53.323Z</updated>
    
    <content type="html"><![CDATA[<p>测试在线地址</p><p><a href="http://cron.qqe2.com/" target="_blank" rel="noopener">http://cron.qqe2.com/</a> </p><p>下面是一些demo</p><p>每天凌晨2点  0 0 2 <em> </em> ?和每天隔一小时 0 <em> </em>/1 <em> </em> ?</p><p>例1：每隔5秒执行一次：<em>/5 </em> <em> </em> * ?</p><p>例2：每隔5分执行一次：0 <em>/5 </em> <em> </em> ?</p><p>在26分、29分、33分执行一次：0 26,29,33 <em> </em> * ?</p><p>例3：每天半夜12点30分执行一次：0 30 0 <em> </em> ? （注意日期域为0不是24）</p><p>每天凌晨1点执行一次：0 0 1 <em> </em> ?</p><p>每天上午10：15执行一次： 0 15 10 ? <em> </em> 或 0 15 10 <em> </em> ? 或 0 15 10 <em> </em> ? *</p><p>每天中午十二点执行一次：0 0 12 <em> </em> ?</p><p>每天14点到14：59分，每1分钟执行一次：0 <em> 14 </em> * ?</p><p>每天14点到14：05分，每1分钟执行一次：0 0-5 14 <em> </em> ?</p><p>每天14点到14：55分，每5分钟执行一次：0 0/5 14 <em> </em> ?</p><p>每天14点到14：55分，和18点到18点55分，每5分钟执行一次：0 0/5 14,18 <em> </em> ?</p><p>每天18点执行一次：0 0 18 <em> </em> ?</p><p>每天18点、22点执行一次：0 0 18,22 <em> </em> ?</p><p>每天7点到23点，每整点执行一次：0 0 7-23 <em> </em> ?</p><p>每个整点执行一次：0 0 0/1 <em> </em> ?</p><p>每天凌晨2点  0 0 2 <em> </em> ?和每天隔一小时 0 <em> </em>/1 <em> </em> ?</p><p>例1：每隔5秒执行一次：<em>/5 </em> <em> </em> * ?</p><p>例2：每隔5分执行一次：0 <em>/5 </em> <em> </em> ?</p><p>在26分、29分、33分执行一次：0 26,29,33 <em> </em> * ?</p><p>例3：每天半夜12点30分执行一次：0 30 0 <em> </em> ? （注意日期域为0不是24）</p><p>每天凌晨1点执行一次：0 0 1 <em> </em> ?</p><p>每天上午10：15执行一次： 0 15 10 ? <em> </em> 或 0 15 10 <em> </em> ? 或 0 15 10 <em> </em> ? *</p><p>每天中午十二点执行一次：0 0 12 <em> </em> ?</p><p>每天14点到14：59分，每1分钟执行一次：0 <em> 14 </em> * ?</p><p>每天14点到14：05分，每1分钟执行一次：0 0-5 14 <em> </em> ?</p><p>每天14点到14：55分，每5分钟执行一次：0 0/5 14 <em> </em> ?</p><p>每天14点到14：55分，和18点到18点55分，每5分钟执行一次：0 0/5 14,18 <em> </em> ?</p><p>每天18点执行一次：0 0 18 <em> </em> ?</p><p>每天18点、22点执行一次：0 0 18,22 <em> </em> ?</p><p>每天7点到23点，每整点执行一次：0 0 7-23 <em> </em> ?</p><p>每个整点执行一次：0 0 0/1 <em> </em> ?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;测试在线地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cron.qqe2.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://cron.qqe2.com/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;下面是一些demo&lt;/p&gt;
&lt;p&gt;每天凌晨2点  0
      
    
    </summary>
    
      <category term="Quartz" scheme="http://yoursite.com/categories/Quartz/"/>
    
      <category term="cron" scheme="http://yoursite.com/categories/Quartz/cron/"/>
    
    
  </entry>
  
  <entry>
    <title>异步的观察者模式处理后台任务</title>
    <link href="http://yoursite.com/2018/10/08/ApplicationEvent/"/>
    <id>http://yoursite.com/2018/10/08/ApplicationEvent/</id>
    <published>2018-10-07T16:00:00.000Z</published>
    <updated>2019-11-13T02:00:07.734Z</updated>
    
    <content type="html"><![CDATA[<p>收到任务说要做一个后台监听文件上传接口 </p><p>如果有docx文档 需要将任务放在后台进程中</p><p>将docx文档转换成pdf文档</p><p>首先文档转换不是我们今天要讲的内容 稍后我会开一章来讲</p><p>事件监听在spring boot里还是比较容易实现的 有以下几点需要注意</p><ul><li>vo实体需要继承 ApplicationEvent</li><li>实现接口ApplicationListener里的onApplicationEvent方法</li><li>使用applicationContext的publishEvent来发布事件</li><li>最后继承AsyncUncaughtExceptionHandler添加异步报错控制</li></ul><p>新建实体 因为我这里只用到 id 所以只需要传入id即可<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZHANG.HAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordToPdfEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Integer id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WordToPdfEvent</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id);</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里需要写你的后台监听到事件后要做的内容 我的是转换文档<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: ZHANG.HAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">handleListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">WordToPdfEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(WordToPdfEvent wordToPdfEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>异步发布事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZHANG.HAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executorAsyncTask</span><span class="params">(List&lt;SysFile&gt; list)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            list.forEach(SysFile -&gt; &#123;</span><br><span class="line">                applicationContext.publishEvent(<span class="keyword">new</span> WordToPdfEvent(SysFile.getId()));</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置后台异步exception<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台异步exception</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZHANG.HAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAsyncUncaughtExceptionHandler</span> <span class="keyword">implements</span> <span class="title">AsyncUncaughtExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ISysLogService sysLogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleUncaughtException</span><span class="params">(Throwable ex, Method method, Object... params)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"handleUncaughtException "</span>);</span><br><span class="line"></span><br><span class="line">        StringJoiner sjr = <span class="keyword">new</span> StringJoiner(<span class="string">","</span>, <span class="string">"["</span>, <span class="string">"]"</span>);</span><br><span class="line">        sjr.add(<span class="string">"Exception Cause - "</span> + ex.getMessage()) ;</span><br><span class="line">        sjr.add(<span class="string">"Method name - "</span> + method.getName()) ;</span><br><span class="line">        <span class="keyword">for</span> (Object param : params) &#123;</span><br><span class="line">            sjr.add(<span class="string">"Parameter value - "</span> + param) ;</span><br><span class="line">        &#125;</span><br><span class="line">         sysLogService.save(<span class="keyword">new</span> SysLog(-<span class="number">99</span>,sjr.toString()));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>配置异步连接池<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ZHANG.HAO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2019-09-09 18:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncConfig</span> <span class="keyword">implements</span> <span class="title">AsyncConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Executor <span class="title">getAsyncExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ThreadPoolTaskExecutor executor = <span class="keyword">new</span> ThreadPoolTaskExecutor();</span><br><span class="line">        executor.setCorePoolSize(<span class="number">17</span>);</span><br><span class="line">        executor.setMaxPoolSize(<span class="number">42</span>);</span><br><span class="line">        executor.setQueueCapacity(<span class="number">11</span>);</span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">"WordToPdfExecutor-"</span>);</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AsyncUncaughtExceptionHandler <span class="title">getAsyncUncaughtExceptionHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyAsyncUncaughtExceptionHandler();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;收到任务说要做一个后台监听文件上传接口 &lt;/p&gt;
&lt;p&gt;如果有docx文档 需要将任务放在后台进程中&lt;/p&gt;
&lt;p&gt;将docx文档转换成pdf文档&lt;/p&gt;
&lt;p&gt;首先文档转换不是我们今天要讲的内容 稍后我会开一章来讲&lt;/p&gt;
&lt;p&gt;事件监听在spring boot里还是比较
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>Lombok的应用</title>
    <link href="http://yoursite.com/2018/09/02/tamplate%20copy/"/>
    <id>http://yoursite.com/2018/09/02/tamplate copy/</id>
    <published>2018-09-01T16:00:00.000Z</published>
    <updated>2020-01-03T05:59:14.470Z</updated>
    
    <content type="html"><![CDATA[<p>eclipse下<br>下载jar<br>运行jar。<br>Java -jar  lombok.jar<br>选择要安装的路径</p><p>Clean 项目</p><p>其实一般情况下都有插件管理中心可以下载<br>idea 下直接去plugins 里下载安装</p><p>在项目中添加 lombok<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;lombok.version&gt;1.16.20&lt;/lombok.version&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;lombok.version&#125;&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">• al：用在局部变量前面，相当于将变量声明为final</span><br><span class="line"></span><br><span class="line">• @NonNull：给方法参数增加这个注解会自动在方法内对该参数进行是否为空的校验，如果为空，则抛出NPE（NullPointerException）</span><br><span class="line"></span><br><span class="line">• @Cleanup：自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成try-finally这样的代码来关闭流</span><br><span class="line"></span><br><span class="line">• @Getter/@Setter：用在属性上，再也不用自己手写setter和getter方法了，还可以指定访问范围</span><br><span class="line"></span><br><span class="line">• @ToString：用在类上，可以自动覆写toString方法，当然还可以加其他参数，例如@ToString(exclude=”id”)排除id属性，或者@ToString(callSuper=true, includeFieldNames=true)调用父类的toString方法，包含所有属性</span><br><span class="line"></span><br><span class="line">• @EqualsAndHashCode：用在类上，自动生成equals方法和hashCode方法</span><br><span class="line"></span><br><span class="line">• @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor：用在类上，自动生成无参构造和使用所有参数的构造函数以及把所有@NonNull属性作为参数的构造函数，如果指定staticName = “of”参数，同时还会生成一个返回类对象的静态工厂方法，比使用构造函数方便很多</span><br><span class="line"></span><br><span class="line">• @Data：注解在类上，相当于同时使用了@ToString、@EqualsAndHashCode、@Getter、@Setter和@RequiredArgsConstrutor这些注解，对于POJO类十分有用</span><br><span class="line"></span><br><span class="line">• @Value：用在类上，是@Data的不可变形式，相当于为属性添加final声明，只提供getter方法，而不提供setter方法</span><br><span class="line"></span><br><span class="line">• @Builder：用在类、构造器、方法上，为你提供复杂的builder APIs，让你可以像如下方式一样调用Person.builder().name(&quot;Adam Savage&quot;).city(&quot;San Francisco&quot;).job(&quot;Mythbusters&quot;).job(&quot;Unchained Reaction&quot;).build();更多说明参考Builder</span><br><span class="line"></span><br><span class="line">• @SneakyThrows：自动抛受检异常，而无需显式在方法上使用throws语句</span><br><span class="line"></span><br><span class="line">• @Synchronized：用在方法上，将方法声明为同步的，并自动加锁，而锁对象是一个私有的属性$lock或$LOCK，而java中的synchronized关键字锁对象是this，锁在this或者自己的类对象上存在副作用，就是你不能阻止非受控代码去锁this或者类对象，这可能会导致竞争条件或者其它线程错误</span><br><span class="line"></span><br><span class="line">• @Getter(lazy=true)：可以替代经典的Double Check Lock样板代码</span><br><span class="line"></span><br><span class="line">• @Log：根据不同的注解生成不同类型的log对象，但是实例名称都是log，有六种可选实现类</span><br><span class="line"></span><br><span class="line">  ○ @CommonsLog Creates log = org.apache.commons.logging.LogFactory.getLog(LogExample.class);</span><br><span class="line"></span><br><span class="line">○ @Log Creates log = java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class="line"></span><br><span class="line">○ @Log4j Creates log = org.apache.log4j.Logger.getLogger(LogExample.class);</span><br><span class="line"></span><br><span class="line">○ @Log4j2 Creates log = org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</span><br><span class="line"></span><br><span class="line">○ @Slf4j Creates log = org.slf4j.LoggerFactory.getLogger(LogExample.class);</span><br><span class="line"></span><br><span class="line">○ @XSlf4j Creates log = org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;eclipse下&lt;br&gt;下载jar&lt;br&gt;运行jar。&lt;br&gt;Java -jar  lombok.jar&lt;br&gt;选择要安装的路径&lt;/p&gt;
&lt;p&gt;Clean 项目&lt;/p&gt;
&lt;p&gt;其实一般情况下都有插件管理中心可以下载&lt;br&gt;idea 下直接去plugins 里下载安装&lt;/p&gt;
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>linux开放端口</title>
    <link href="http://yoursite.com/2018/05/18/linuxPort/"/>
    <id>http://yoursite.com/2018/05/18/linuxPort/</id>
    <published>2018-05-17T16:00:00.000Z</published>
    <updated>2020-01-03T03:35:33.048Z</updated>
    
    <content type="html"><![CDATA[<p>文件local<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p><p>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 5236 -j ACCEPT</span><br></pre></td></tr></table></figure><p>生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></p><p>-A RH-Firewall-1-INPUT -m state –state NEW -m tcp -p tcp –dport 3000:5000 -j ACCEPT</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文件local&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>记一次ftp并发导致的bug</title>
    <link href="http://yoursite.com/2018/04/20/threadLocal/"/>
    <id>http://yoursite.com/2018/04/20/threadLocal/</id>
    <published>2018-04-19T16:00:00.000Z</published>
    <updated>2019-12-13T10:14:00.330Z</updated>
    
    <content type="html"><![CDATA[<p>ThreadLocal 适用于如下两种场景</p><ul><li><p>每个线程需要有自己单独的实例</p></li><li><p>实例需要在多个方法中共享，但不希望被多线程共享</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private ThreadLocal&lt;FTPClient&gt; ftpClientThreadLocal = new ThreadLocal&lt;FTPClient&gt;();</span><br><span class="line"></span><br><span class="line">private FTPClient getFTPClient()  &#123;</span><br><span class="line">if (ftpClientThreadLocal.get() != null &amp;&amp; ftpClientThreadLocal.get().isConnected()) &#123;</span><br><span class="line">return ftpClientThreadLocal.get();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">FTPClient ftpClient = new FTPClient(); //构造一个FtpClient实例</span><br><span class="line"></span><br><span class="line">ftpClient.setControlEncoding(&quot;UTF-8&quot;);</span><br><span class="line">//ftpClient.completePendingCommand();</span><br><span class="line"></span><br><span class="line">ftpClient.enterLocalPassiveMode();</span><br><span class="line">//ftpClient.enterLocalActiveMode();</span><br><span class="line">ftpClient.setBufferSize(1024*2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">loginFtp(ftpClient);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ftpClientThreadLocal.set(ftpClient);</span><br><span class="line">return ftpClient;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FTPClient ftpClient = getFTPClient();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ThreadLocal 适用于如下两种场景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每个线程需要有自己单独的实例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实例需要在多个方法中共享，但不希望被多线程共享&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="并发" scheme="http://yoursite.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>jvm 调优参数</title>
    <link href="http://yoursite.com/2018/04/08/jvmOptimize/"/>
    <id>http://yoursite.com/2018/04/08/jvmOptimize/</id>
    <published>2018-04-07T16:00:00.000Z</published>
    <updated>2019-12-13T10:13:17.448Z</updated>
    
    <content type="html"><![CDATA[<p>参数查看可以打开本地jdk下的<br>jconsole<br>查看</p><ul><li>可以先查看下本地的jdk环境是client 还是server<br>可以根据java -version 查看<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apple@appletekiMacBook-Air  ~  java -version</span><br><span class="line">java version "1.8.0_181"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_181-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)</span><br></pre></td></tr></table></figure></li></ul><p>如果是client jar包启动还可以加上 -server 这样启动虽然会慢点 但是效率会高很多</p><ul><li>其他的优化点 </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC</span><br></pre></td></tr></table></figure><p>我在这边简单说一下：<br>-XX:MetaspaceSize=128m （元空间默认大小）<br>-XX:MaxMetaspaceSize=128m （元空间最大大小）<br>-Xms1024m （堆最大大小）<br>-Xmx1024m （堆默认大小）<br>-Xmn256m （新生代大小）<br>-Xss256k （棧最大深度大小）<br>-XX:SurvivorRatio=8 （新生代分区比例 8:2）<br>-XX:+UseConcMarkSweepGC （指定使用的垃圾收集器，这里使用CMS收集器）<br>-XX:+PrintGCDetails （打印详细的GC日志）</p><p>知识点：<br>JDK8之后把-XX:PermSize 和 -XX:MaxPermGen移除了，取而代之的是<br>-XX:MetaspaceSize=128m （元空间默认大小）<br>-XX:MaxMetaspaceSize=128m （元空间最大大小）<br>JDK 8开始把类的元数据放到本地化的堆内存(native heap)中，这一块区域就叫Metaspace，中文名叫元空间。<br>使用本地化的内存有什么好处呢？最直接的表现就是java.lang.OutOfMemoryError: PermGen 空间问题将不复存在，因为默认的类的元数据分配只受本地内存大小的限制，也就是说本地内存剩余多少，理论上Metaspace就可以有多大（貌似容量还与操作系统的虚拟内存有关？这里不太清楚），这解决了空间不足的问题。不过，让Metaspace变得无限大显然是不现实的，因此我们也要限制Metaspace的大小：使用-XX:MaxMetaspaceSize参数来指定Metaspace区域的大小。JVM默认在运行时根据需要动态地设置MaxMetaspaceSize的大小。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参数查看可以打开本地jdk下的&lt;br&gt;jconsole&lt;br&gt;查看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以先查看下本地的jdk环境是client 还是server&lt;br&gt;可以根据java -version 查看&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="jvm" scheme="http://yoursite.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>乐扣刷题2 两数相加</title>
    <link href="http://yoursite.com/2017/11/18/leetcode2/"/>
    <id>http://yoursite.com/2017/11/18/leetcode2/</id>
    <published>2017-11-17T16:00:00.000Z</published>
    <updated>2019-11-22T03:23:48.455Z</updated>
    
    <content type="html"><![CDATA[<p>大概思路都在下面备注里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        ListNode a = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode p = l1, q = l2,curr = a;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p != <span class="keyword">null</span> || q != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> x = (p != <span class="keyword">null</span>) ? p.val : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> y = (q != <span class="keyword">null</span>) ? q.val : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> sum = carry + x + y;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只能是0 或者 1</span></span><br><span class="line">            carry = sum / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//读取个位数 加入next</span></span><br><span class="line">            curr.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 激活下一位</span></span><br><span class="line">            curr = curr.next;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 赋值两个链表</span></span><br><span class="line">            <span class="keyword">if</span>(p != <span class="keyword">null</span>) p = p.next;</span><br><span class="line">            <span class="keyword">if</span>(q != <span class="keyword">null</span>) q = q.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当最后大于1 但是while不会循环 所以需要给new一个listNode来补充 比如 11 99 110 用来最后添加这个1的</span></span><br><span class="line">        <span class="keyword">if</span>(carry &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            curr.next = <span class="keyword">new</span> ListNode(carry);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> a.next;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大概思路都在下面备注里&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>乐扣刷题3 无重复的最长字符串</title>
    <link href="http://yoursite.com/2017/11/18/leetcode3/"/>
    <id>http://yoursite.com/2017/11/18/leetcode3/</id>
    <published>2017-11-17T16:00:00.000Z</published>
    <updated>2019-11-22T03:24:26.887Z</updated>
    
    <content type="html"><![CDATA[<p>//给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。<br>//<br>// 示例 1:<br>//<br>// 输入: “abcabcbb”<br>//输出: 3<br>//解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。<br>//<br>//<br>// 示例 2:<br>//<br>// 输入: “bbbbb”<br>//输出: 1<br>//解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。<br>//<br>//<br>// 示例 3:<br>//<br>// 输入: “pwwkew”<br>//输出: 3<br>//解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>//     请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。<br>//<br>// Related Topics 哈希表 双指针 字符串 Sliding Window</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> n = s.length(), ans = <span class="number">0</span>;</span><br><span class="line">       <span class="comment">//创建map窗口,i为左区间，j为右区间，右边界移动</span></span><br><span class="line">       Map&lt;Character, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>, i = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 如果窗口中包含当前字符，</span></span><br><span class="line">           <span class="keyword">if</span> (map.containsKey(s.charAt(j))) &#123;</span><br><span class="line"></span><br><span class="line">               <span class="comment">//当找到相同的数据</span></span><br><span class="line">               i = Math.max(map.get(s.charAt(j)), i);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//比对当前无重复字段长度和储存的长度，选最大值并替换</span></span><br><span class="line">           <span class="comment">//取的[i,j]长度 +1 是因为从0开始的</span></span><br><span class="line">           ans = Math.max(ans, j - i + <span class="number">1</span>);</span><br><span class="line">           <span class="comment">// 将当前字符为key，下一个索引为value放入map中</span></span><br><span class="line">           <span class="comment">// value为j+1是为了当出现重复字符时，i直接跳到上个相同字符的下一个位置，if中取值就不用+1了</span></span><br><span class="line">           map.put(s.charAt(j), j+<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> ans;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;//给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。&lt;br&gt;//&lt;br&gt;// 示例 1:&lt;br&gt;//&lt;br&gt;// 输入: “abcabcbb”&lt;br&gt;//输出: 3&lt;br&gt;//解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。&lt;br&gt;//&lt;b
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>idea远程debug</title>
    <link href="http://yoursite.com/2017/04/16/ideaDebug/"/>
    <id>http://yoursite.com/2017/04/16/ideaDebug/</id>
    <published>2017-04-15T16:00:00.000Z</published>
    <updated>2019-12-13T10:13:03.698Z</updated>
    
    <content type="html"><![CDATA[<p>远程debug 原理是利用端口监听来触发本地idea </p><p>所以你本地的代码和远程的代码要保持一致</p><p>部署上去之后需要加上特定的参数来启动 </p><p>原来启动jar包需要的命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar xxx.jar</span><br></pre></td></tr></table></figure></p><p>如果是远程debug 则需要加上一些参数<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=4001 xxx.jar</span><br></pre></td></tr></table></figure></p><p>这个参数在idea里可以直接获取到</p><p>接下来我们去找如何获取debug参数</p><blockquote><p>菜单 -&gt; Run -&gt; Edit Configurations…</p></blockquote><p><img src="https://victorblog.nos-eastchina1.126.net/2072/1.png" alt="img"></p><blockquote><p>在debug Configurations的弹出框里添加一个remote</p></blockquote><p><img src="https://victorblog.nos-eastchina1.126.net/2072/2.png" alt="img"></p><blockquote><p>添加后需要注意配置好 1-2 后就生成了启动参数</p></blockquote><p><img src="/themes/hexo-theme-snippet/source/img/a.png" alt="img"></p><blockquote><p>之后启动jar的时候添加上 服务器启动好后 在启动本地的</p></blockquote><p>QAQ</p><ul><li>当发现启动报错 首先检查下你的命令 不要直接复制我的 看你自己生成的代码</li><li>保证端口没被占用</li><li>本地启动remote会发送请求连接服务器 如果本机无法连接服务器也不行</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;远程debug 原理是利用端口监听来触发本地idea &lt;/p&gt;
&lt;p&gt;所以你本地的代码和远程的代码要保持一致&lt;/p&gt;
&lt;p&gt;部署上去之后需要加上特定的参数来启动 &lt;/p&gt;
&lt;p&gt;原来启动jar包需要的命令&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;
      
    
    </summary>
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="idea" scheme="http://yoursite.com/tags/idea/"/>
    
      <category term="debug" scheme="http://yoursite.com/tags/debug/"/>
    
  </entry>
  
</feed>
