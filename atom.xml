<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-08T01:30:21.215Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于SLF4J MDC机制配合AOP实现日志的链路追踪</title>
    <link href="http://yoursite.com/2019/05/31/slf4jMDC/"/>
    <id>http://yoursite.com/2019/05/31/slf4jMDC/</id>
    <published>2019-05-30T16:00:00.000Z</published>
    <updated>2019-11-08T01:30:21.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>一个合格的项目必须要有日志来支撑,日志不但能记录输入输出,当系统有问题的时候我们还需要做线上问题的排查.</p><p>在一个正常的项目中日志里包含了各种各样的接口及其他无关的数据日志,那么我们如何快速定位单次请求中所有的日志呢 ?</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>当我们设计一个系统日志的时候</p><p>首先我们需要解决以下几个问题</p><ol><li><p>哪些数据需要写进日志中</p></li><li><p>日志如何分类 按天还是按周</p></li><li><p>如何区分每次请求</p></li><li><p>请求参数及返回值需不需要打印</p></li><li><p>如何进行多环节配置</p></li></ol><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>按照上面的问题我们来一个一个解决</p><p>主要思路是</p><ol><li><p>AOP 负责切入每个请求及参数打印</p></li><li><p>在进入 controller 之前打印本次请求的各种参数</p></li><li><p>MDC 添加 hashCode 来做参数校验</p></li><li><p>日志使用 logback 配置</p></li><li><p>日志按天分类,每天生成一个日志</p></li><li><p>利用 thread 来区分每次请求</p></li><li><p>springProfile 来做多环境配置</p></li></ol><p>aop 有两种<br>CGLIB,JDK 都是动态代理 今天不讨论这两者的区别 我使用的是 CGLIB</p><p>pom 中引入 SpringBoot 的 web 模块和使用 AOP 相关的依赖：</p><p>定义切面类，实现 web 层的日志切面</p><p>对所有的 web 请求做切面来记录日志</p><h1 id="第一种-AOP-上-logback-的输出"><a href="#第一种-AOP-上-logback-的输出" class="headerlink" title="第一种 AOP 上 logback 的输出"></a>第一种 AOP 上 logback 的输出</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接收到请求，记录请求内容</span></span><br><span class="line">     ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">     <span class="keyword">if</span> (attributes != <span class="keyword">null</span> &amp;&amp; joinPoint != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">         HttpServletRequest request = attributes.getRequest();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 记录请求内容</span></span><br><span class="line">         log.info( <span class="string">"1. 对象请求的URL : "</span> + request.getRequestURL().toString());</span><br><span class="line">         log.info( <span class="string">"2. 请求方法名称 : "</span> + request.getMethod());</span><br><span class="line">         log.info( <span class="string">"3. 对方IP地址 : "</span> + request.getRemoteAddr());</span><br><span class="line">         log.info( <span class="string">"4. 运行的java类 : "</span> + joinPoint.getSignature().getDeclaringTypeName() + <span class="string">"."</span> + joinPoint.getSignature().getName());</span><br><span class="line">         <span class="keyword">try</span>&#123;</span><br><span class="line">             log.info(<span class="string">"5. 请求参数 : "</span> + JSONObject.toJSONString(joinPoint.getArgs() ));</span><br><span class="line">         &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">             log.info(<span class="string">"请求参数切点无法切入"</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> CheckException(<span class="string">"网络请求出错, 请清空缓存重新尝试. "</span>);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="第二种-request-HashCode-唯一标示"><a href="#第二种-request-HashCode-唯一标示" class="headerlink" title="第二种 request.HashCode 唯一标示"></a>第二种 request.HashCode 唯一标示</h1><p>在获得</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">log.info(request.hashCode()+ <span class="string">"5. 请求参数 : "</span> + JSONObject.toJSONString(joinPoint.getArgs() ));</span><br></pre></td></tr></table></figure><h1 id="第三种-基于-SLF4J-的-MDC-机制"><a href="#第三种-基于-SLF4J-的-MDC-机制" class="headerlink" title="第三种 基于 SLF4J 的 MDC 机制"></a>第三种 基于 SLF4J 的 MDC 机制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MDC.put(<span class="string">"THREAD_ID"</span>, <span class="string">"userId"</span>+ userService.getId() );</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%date [%thread] %-5level %logger&#123;80&#125;  %X&#123;THREAD_ID&#125; || %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="第四种-结合-HashCode-和-MDC"><a href="#第四种-结合-HashCode-和-MDC" class="headerlink" title="第四种 结合 HashCode 和 MDC"></a>第四种 结合 HashCode 和 MDC</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MDC.put(<span class="string">"THREAD_ID"</span>, <span class="string">""</span>+request.hashCode());</span><br></pre></td></tr></table></figure><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">14</span>:<span class="number">27</span>,<span class="number">743</span> [main] INFO  com.zwkj.zhxt.ZhxtApplication || Started ZhxtApplication in <span class="number">48.489</span> seconds (JVM running <span class="keyword">for</span> <span class="number">56.375</span>)</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">310</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">1</span>. 对象请求的URL : http:<span class="comment">//localhost:8088/zhxtotc/sys-user/login</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">313</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2</span>. 请求方法名称 : POST</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">314</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">3</span>. 对方IP地址 : <span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">323</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">4</span>. 运行的java类 : com.zwkj.zhxt.controller.SysUserController.findSysUser</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">28</span>,<span class="number">585</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2825564545</span>. 请求参数 : [&#123;<span class="string">"code"</span>:<span class="string">"string"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>,<span class="string">"phone"</span>:<span class="string">"string"</span>,<span class="string">"username"</span>:<span class="string">"admin12"</span>&#125;]</span><br><span class="line"> Time：<span class="number">168</span> ms - ID：com.zwkj.zhxt.mvc.sysuser.mapper.SysUserMapper.selectOne</span><br><span class="line">Execute SQL：SELECT id,username,password,nickname,role_id,create_time,update_time,delete_status,user_id FROM sys_user WHERE username = <span class="string">'admin12'</span> AND password = <span class="string">'4QrcOUm6Wau+VuBX8g+IPg=='</span></span><br><span class="line"></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">30</span>,<span class="number">860</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="meta">@Around</span>:结果是 :ResultBean com.zwkj.zhxt.controller.SysUserController.findSysUser(UserModel) use time: <span class="number">2551</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">30</span>,<span class="number">861</span> [qtp1387878879-<span class="number">21</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">282556454</span>: 方法的返回值 : ResultBean(msg=success, code=<span class="number">0</span>, data=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub3ciOiIxNTU5NjE0NTMwMjE2emh4dCIsImtleSI6InVzZXIxMiJ9.ae7ra7hvDSp5N6YfuGYzr8ULeq7Zr5OuC_4PbybqceY)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">401</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">1</span>. 对象请求的URL : http:<span class="comment">//localhost:8088/zhxtotc/sys-user/login</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">401</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2</span>. 请求方法名称 : POST</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">3</span>. 对方IP地址 : <span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">1</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">4</span>. 运行的java类 : com.zwkj.zhxt.controller.SysUserController.findSysUser</span><br><span class="line"><span class="number">2019</span>-<span class="number">06</span>-<span class="number">04</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">41</span>,<span class="number">402</span> [qtp1387878879-<span class="number">19</span>] INFO  com.zwkj.zhxt.common.ControllerAOP || <span class="number">2825564545</span>. 请求参数 : [&#123;<span class="string">"code"</span>:<span class="string">"string"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>,<span class="string">"phone"</span>:<span class="string">"string"</span>,<span class="string">"username"</span>:<span class="string">"admin12"</span>&#125;]</span><br><span class="line"> Time：<span class="number">151</span> ms - ID：com.zwkj.zhxt.mvc.sysuser.mapper.SysUserMapper.selectOne</span><br><span class="line">Execute SQL：SELECT id,username,password,nickname,role_id,create_time,update_time,delete_status,user_id FROM sys_user WHERE username = <span class="string">'admin12'</span> AND password = <span class="string">'4QrcOUm6Wau+VuBX8g+IPg=='</span></span><br></pre></td></tr></table></figure><blockquote><h1 id="literal-asterisks-转义"><a href="#literal-asterisks-转义" class="headerlink" title="\*literal asterisks\* 转义"></a>\*literal asterisks\* 转义</h1></blockquote><p>*literal asterisks*</p><blockquote><h1 id="MD-语法-加粗-加粗"><a href="#MD-语法-加粗-加粗" class="headerlink" title="MD 语法 加粗 **加粗**"></a>MD 语法 加粗 **加粗**</h1></blockquote><p><strong>比较粗</strong></p><blockquote><h1 id="MD-语法-斜体-斜体"><a href="#MD-语法-斜体-斜体" class="headerlink" title="MD 语法 斜体 *斜体*"></a>MD 语法 斜体 *斜体*</h1></blockquote><p><em>本来就是斜的</em></p><blockquote><h1 id="MD-语法-列表-1-2-3"><a href="#MD-语法-列表-1-2-3" class="headerlink" title="MD 语法 列表 1. 2. 3."></a>MD 语法 列表 1. 2. 3.</h1></blockquote><ol><li>ni shuo ni shi shui ?</li><li>ni bushi shuo ni me ?</li><li>wo xi huan de shi ni !</li></ol><blockquote><h1 id="MD-语法-列表-XXX-XXX-XXX"><a href="#MD-语法-列表-XXX-XXX-XXX" class="headerlink" title="MD 语法 列表 -XXX -XXX -XXX"></a>MD 语法 列表 -XXX -XXX -XXX</h1></blockquote><ul><li>wo bu shi yi ge haoren</li><li>na ni shi shen me ?</li><li>wo shi dog</li></ul><blockquote><h1 id="MD-语法-分割线-代表一条分割线"><a href="#MD-语法-分割线-代表一条分割线" class="headerlink" title="MD 语法 分割线 *** 代表一条分割线"></a>MD 语法 分割线 *** 代表一条分割线</h1></blockquote><hr><hr><hr><blockquote><h1 id="MD-语法-A-标签-A-标签显示的名称-链接地址"><a href="#MD-语法-A-标签-A-标签显示的名称-链接地址" class="headerlink" title="MD 语法 A 标签 [A 标签显示的名称](链接地址)"></a>MD 语法 A 标签 [A 标签显示的名称](链接地址)</h1></blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">baidu</a></p><blockquote><h1 id="MD-语法-图片-图片说明-图片地址"><a href="#MD-语法-图片-图片说明-图片地址" class="headerlink" title="MD 语法 图片 ![ 图片说明 ](图片地址)"></a>MD 语法 图片 ![ 图片说明 ](图片地址)</h1></blockquote><p><img src="/img/banner.jpg" alt="img"></p><blockquote><h1 id="MD-语法-编写代码-三个"><a href="#MD-语法-编写代码-三个" class="headerlink" title="MD 语法 编写代码 三个 `"></a>MD 语法 编写代码 三个 `</h1></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  <span class="title">print</span><span class="params">(<span class="string">'asd'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">test</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><h1 id="MD-语法-表格"><a href="#MD-语法-表格" class="headerlink" title="MD 语法 表格"></a>MD 语法 表格</h1></blockquote><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”</td></tr></tbody></table><blockquote><h1 id="MD-语法-标题-一个-号是一级标题-依此类推"><a href="#MD-语法-标题-一个-号是一级标题-依此类推" class="headerlink" title="MD 语法 标题 一个#号是一级标题 依此类推"></a>MD 语法 标题 一个#号是一级标题 依此类推</h1></blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;一个合格的项目必须要有日志来支撑,日志不但能记录输入输出,当系统有问题的时候我们还需要做线上问题的排查.&lt;/p&gt;
&lt;p&gt;在一
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="AOP" scheme="http://yoursite.com/tags/AOP/"/>
    
      <category term="SLF4J" scheme="http://yoursite.com/tags/SLF4J/"/>
    
      <category term="MDC" scheme="http://yoursite.com/tags/MDC/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot-ioc 解析</title>
    <link href="http://yoursite.com/2019/05/22/springBootIOC/"/>
    <id>http://yoursite.com/2019/05/22/springBootIOC/</id>
    <published>2019-05-21T16:00:00.000Z</published>
    <updated>2019-11-08T01:29:08.751Z</updated>
    
    <content type="html"><![CDATA[<p>spring boot ioc 启动调用堆栈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">inject:<span class="number">177</span>, InjectionMetadata$InjectedElement (org.springframework.beans.factory.annotation)</span><br><span class="line">inject:<span class="number">90</span>, InjectionMetadata (org.springframework.beans.factory.annotation)</span><br><span class="line">postProcessProperties:<span class="number">321</span>, CommonAnnotationBeanPostProcessor (org.springframework.context.annotation)</span><br><span class="line">populateBean:<span class="number">1395</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">doCreateBean:<span class="number">592</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">createBean:<span class="number">515</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">lambda$doGetBean$<span class="number">0</span>:<span class="number">320</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getObject:-<span class="number">1</span>, <span class="number">2018260103</span> (org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$<span class="number">144</span>)</span><br><span class="line">getSingleton:<span class="number">222</span>, DefaultSingletonBeanRegistry (org.springframework.beans.factory.support)</span><br><span class="line">doGetBean:<span class="number">318</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getBean:<span class="number">199</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">resolveCandidate:<span class="number">277</span>, DependencyDescriptor (org.springframework.beans.factory.config)</span><br><span class="line">doResolveDependency:<span class="number">1247</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">resolveDependency:<span class="number">1167</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">inject:<span class="number">593</span>, AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement (org.springframework.beans.factory.annotation)</span><br><span class="line">inject:<span class="number">90</span>, InjectionMetadata (org.springframework.beans.factory.annotation)</span><br><span class="line">postProcessProperties:<span class="number">374</span>, AutowiredAnnotationBeanPostProcessor (org.springframework.beans.factory.annotation)</span><br><span class="line">populateBean:<span class="number">1395</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">doCreateBean:<span class="number">592</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">createBean:<span class="number">515</span>, AbstractAutowireCapableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">lambda$doGetBean$<span class="number">0</span>:<span class="number">320</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getObject:-<span class="number">1</span>, <span class="number">2018260103</span> (org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$<span class="number">144</span>)</span><br><span class="line">getSingleton:<span class="number">222</span>, DefaultSingletonBeanRegistry (org.springframework.beans.factory.support)</span><br><span class="line">doGetBean:<span class="number">318</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">getBean:<span class="number">199</span>, AbstractBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">preInstantiateSingletons:<span class="number">849</span>, DefaultListableBeanFactory (org.springframework.beans.factory.support)</span><br><span class="line">finishBeanFactoryInitialization:<span class="number">877</span>, AbstractApplicationContext (org.springframework.context.support)</span><br><span class="line">refresh:<span class="number">549</span>, AbstractApplicationContext (org.springframework.context.support)</span><br><span class="line">refresh:<span class="number">142</span>, ServletWebServerApplicationContext (org.springframework.boot.web.servlet.context)</span><br><span class="line">refresh:<span class="number">775</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">refreshContext:<span class="number">397</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">316</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">1260</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">run:<span class="number">1248</span>, SpringApplication (org.springframework.boot)</span><br><span class="line">main:<span class="number">26</span>, ZhxtApplication (com.zwkj.zhxt)</span><br></pre></td></tr></table></figure><p>AbstractAutowireCapableBeanFactory 320<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">configureBean</span><span class="params">(Object existingBean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">markBeanAsCreated(beanName);</span><br><span class="line">BeanDefinition mbd = getMergedBeanDefinition(beanName);</span><br><span class="line">RootBeanDefinition bd = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (mbd <span class="keyword">instanceof</span> RootBeanDefinition) &#123;</span><br><span class="line">RootBeanDefinition rbd = (RootBeanDefinition) mbd;</span><br><span class="line">bd = (rbd.isPrototype() ? rbd : rbd.cloneBeanDefinition());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bd == <span class="keyword">null</span>) &#123;</span><br><span class="line">bd = <span class="keyword">new</span> RootBeanDefinition(mbd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!bd.isPrototype()) &#123;</span><br><span class="line">bd.setScope(BeanDefinition.SCOPE_PROTOTYPE);</span><br><span class="line">bd.allowCaching = ClassUtils.isCacheSafe(ClassUtils.getUserClass(existingBean), getBeanClassLoader());</span><br><span class="line">&#125;</span><br><span class="line">BeanWrapper bw = <span class="keyword">new</span> BeanWrapperImpl(existingBean);</span><br><span class="line">initBeanWrapper(bw);</span><br><span class="line">populateBean(beanName, bd, bw);</span><br><span class="line"><span class="keyword">return</span> initializeBean(beanName, existingBean, bd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>AbstractAutowireCapableBeanFactory 1336 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PropertyValues pvs = (mbd.hasPropertyValues() ? mbd.getPropertyValues() : <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME || mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) &#123;</span><br><span class="line">MutablePropertyValues newPvs = <span class="keyword">new</span> MutablePropertyValues(pvs);</span><br><span class="line"><span class="comment">// Add property values based on autowire by name if applicable.</span></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_NAME) &#123;</span><br><span class="line">autowireByName(beanName, mbd, bw, newPvs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Add property values based on autowire by type if applicable.</span></span><br><span class="line"><span class="keyword">if</span> (mbd.getResolvedAutowireMode() == AUTOWIRE_BY_TYPE) &#123;</span><br><span class="line">autowireByType(beanName, mbd, bw, newPvs);</span><br><span class="line">&#125;</span><br><span class="line">pvs = newPvs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> hasInstAwareBpps = hasInstantiationAwareBeanPostProcessors();</span><br><span class="line"><span class="keyword">boolean</span> needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);</span><br><span class="line"></span><br><span class="line">PropertyDescriptor[] filteredPds = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (hasInstAwareBpps) &#123;</span><br><span class="line"><span class="keyword">if</span> (pvs == <span class="keyword">null</span>) &#123;</span><br><span class="line">pvs = mbd.getPropertyValues();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (BeanPostProcessor bp : getBeanPostProcessors()) &#123;</span><br><span class="line"><span class="keyword">if</span> (bp <span class="keyword">instanceof</span> InstantiationAwareBeanPostProcessor) &#123;</span><br><span class="line">InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;</span><br><span class="line">PropertyValues pvsToUse = ibp.postProcessProperties(pvs, bw.getWrappedInstance(), beanName);</span><br><span class="line"><span class="keyword">if</span> (pvsToUse == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (filteredPds == <span class="keyword">null</span>) &#123;</span><br><span class="line">filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);</span><br><span class="line">&#125;</span><br><span class="line">pvsToUse = ibp.postProcessPropertyValues(pvs, filteredPds, bw.getWrappedInstance(), beanName);</span><br><span class="line"><span class="keyword">if</span> (pvsToUse == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pvs = pvsToUse;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;spring boot ioc 启动调用堆栈&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="springboot" scheme="http://yoursite.com/categories/springboot/"/>
    
    
      <category term="ioc" scheme="http://yoursite.com/tags/ioc/"/>
    
  </entry>
  
  <entry>
    <title>记一次慢sql的查询记录</title>
    <link href="http://yoursite.com/2019/05/13/sqlOptimize/"/>
    <id>http://yoursite.com/2019/05/13/sqlOptimize/</id>
    <published>2019-05-12T16:00:00.000Z</published>
    <updated>2019-11-08T01:30:27.357Z</updated>
    
    <content type="html"><![CDATA[<p>本质上来讲 sql优化和数据库优化是两种优化</p><p>数据库优化包含的种类较多 软件优化,硬件优化</p><p>理论上 单个mysql数据库能够支撑的是每秒2000的并发 极限是5000</p><p>当然本次不说数据库优化 先说sql优化</p><p>sql优化一般是针对单个业务进行优化</p><p>比如秒杀 系统的订单查询 (当然一般用redis 这里只是举个例子)</p><p>或者说是对excel表格进行分析插入数据库</p><p>等等各种各样的业务</p><p>当然一个简单的sql 可能就是这样的 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> ASSIGNEE_ = <span class="string">'user1'</span></span><br></pre></td></tr></table></figure><p>但在实际业务环境中可能并不是这样</p><p>实际会复杂很多 以及很多条件</p><p>当我们在处理这样的sql的时候 应该怎么去优化以及从哪里入手</p><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>我们大家都是知道索引可以很好的帮我们来提高效率</p><p>但是具体怎么用 以及针对某个业务或者单条sql怎么优化</p><p>再说这些之前我们先针对SQL进行一些常识性优化  比如</p><h2 id="基本优化"><a href="#基本优化" class="headerlink" title="基本优化"></a>基本优化</h2><p><strong>WHERE 子句里面的列尽量被索引</strong></p><p><strong>尽量避免使用 “SELECT *”</strong></p><p><strong>如果用到分页 尽量使用物理分页 并非逻辑分页</strong></p><p><strong>join列尽量使用索引</strong></p><p><strong>order by 使用索引</strong></p><p>等等  </p><p>总之是<strong>为了避免全表扫描做出的各种操作</strong></p><p>大家应该发现索引的使用还是非常频繁的</p><p>那么具体某个sql使用了哪些索引 以及进行了什么处理操作</p><h1 id="EXPLAIN-优化"><a href="#EXPLAIN-优化" class="headerlink" title="EXPLAIN 优化"></a>EXPLAIN 优化</h1><p>我们可以用  EXPLAIN 关键字去查看执行计划</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> professor a</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> sys_attend b</span><br><span class="line"><span class="keyword">WHERE</span> a.id = b.professor_id</span><br><span class="line"><span class="keyword">AND</span> b.<span class="string">`type`</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> b.table_id = <span class="number">93353728</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">AND</span> a.polling_status = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> a.status = <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> (a.Member_category = <span class="number">1</span></span><br><span class="line"><span class="keyword">OR</span> a.Member_category = <span class="number">3</span>)</span><br><span class="line"><span class="keyword">AND</span> (organization_category <span class="keyword">IN</span> (<span class="number">4</span>, <span class="number">7</span>)</span><br><span class="line"><span class="keyword">OR</span> organization_categoryvice <span class="keyword">IN</span> (<span class="number">4</span>, <span class="number">7</span>))</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table</th><th style="text-align:center">type</th><th style="text-align:center">possible_keys</th><th style="text-align:center">key</th><th style="text-align:center">key_len</th><th style="text-align:center">ref</th><th style="text-align:center">rows</th><th style="text-align:center">Extra </th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">“PRIMARY”</td><td style="text-align:center">“a”</td><td style="text-align:center">“index_merge”</td><td style="text-align:center">“professor_level_index,professor_levelvice_index”</td><td style="text-align:center">“professor_level_index,professor_levelvice_index”</td><td style="text-align:center">“2,2”</td><td style="text-align:center">NULL</td><td style="text-align:center">28</td><td style="text-align:center">“Using sort_union(professor_level_index,professor_levelvice_index);</td><td>Using where”</td><td></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">“DEPENDENT SUBQUERY”</td><td style="text-align:center">“b”</td><td style="text-align:center">“ALL”</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">NULL</td><td style="text-align:center">85</td><td style="text-align:center">“Using where”</td></tr></tbody></table><p>这张表里大概有这么几个字段</p><ol><li><p>id 执行顺序 可以重复</p><ul><li>id相同则从上往下执行</li><li>id从大到小执行</li></ul></li><li><p>select_type 搜索类型 一共有十一种 具体可以看这篇博客<a href="https://blog.csdn.net/y1193329479/article/details/78821126#27_DEPENDENT_SUBQUERY_134" target="_blank" rel="noopener">SQL_explain操作解释</a> 这里就简单的介绍常见的几种 </p><ul><li><p>第一种也是最常见到的一种 SIMPLE 简单的select查询,查询中不包含子查询或者union;</p></li><li><p>PRIMARY:查询中若包含任何复杂的子查询,最外层查询则被标记; 就是刚刚的优先级最外层则会显示PRIMARY</p></li><li><p>SUBQUERY:在select或者where列表中包含了子查询;</p></li></ul></li></ol><ol start="3"><li><p>type 显示的是访问类型，一般我们优化sql就是着重优化这个 , 是较为重要的一个指标，结果值从好到坏依次是：<br>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL。 一般来说，得保证查询至少达到range级别，最好能达到ref。 那么怎么能达到这个级别呢 </p><ul><li><p>ref:非唯一性索引扫描,返回匹配某个单独值得所有行,本质上也是一种索引访问,它返回所有匹配某个单独值的行,然而,它可能会找到多个符合条件的行,所以它应该属于查找和扫描的混合体;</p></li><li><p>range:只检索给定范围的行,使用一个索引来选择行,key列显示使用哪个索引,一般就是在你的where语句中出现了between,&lt;,&gt;,in等的查询；这种范围索引扫描比全表扫描要好,因为它只需要开始于索引的某一个点,结束于另一个点,不用扫描全部索引; 之前说的避免全表扫描就是为了这样</p></li></ul></li></ol><ol start="4"><li><p>possible_keys:显示可能会被应用到这张表的索引,一个或者多个;查询涉及到的字段上若存在索引,则该索引将被列出,但不一定被查询实际使用到;</p></li><li><p>key:实际使用到的索引.如果为null,则没有使用索引;查询中若使用了覆盖索引,则该索引仅出现在key列表中;</p></li><li><p>key_len:表示索引中使用的字节数,可通过该列计算查询中使用的索引的长度,在不损失精确性的情况下,长度越短越好; key_len显示的值为索引字段的最大可能长度,并非实际使用长度,即key_len是根据表定义计算而得,不是通过表内检索出的;</p></li><li><p>ref:显示索引的哪一列被使用了,如果可能的话,是一个常数,哪些列或常量别用于查找索引列上的值;</p></li><li><p>rows:根据表统计信息及索引选用情况,大致估算出找到所需的记录所需要读取的行数;</p></li><li><p>Extra:包含不适合在其它列中显示但十分重要的额外信息:</p><ul><li>对于这个消息栏里展示的东西有很多 一般是你的sql违反的数据库相对应的算法,他认为你的不合理</li><li>在这里就不详细解释了 当大家出现后可以百度相对应的信息 <a href="https://blog.csdn.net/poxiaonie/article/details/77757471" target="_blank" rel="noopener">MySQL中explain执行计划中额外信息字段(Extra)详解</a></li></ul></li></ol><p>那么根据这些信息我们可以查到需要优化哪些地方</p><p>说完 explain 我们可以再说说 explain extended + show warnings </p><p>在执行explain extended  之后我们在 show warnings 可以看到在数据库中我们sql的执行方式, 我们可以在这个基础上再次进行优化</p><p>我们可以看到sql的执行方式，对于分析sql还是很有帮助的。</p><p>( 8 ) SELECT ( 9 ) DISTINCT ( 11 ) &lt; Top Num &gt; &lt; select list &gt; </p><p>( 1 ) FROM [ left_table ] </p><p>( 3 ) &lt; join_type &gt; JOIN &lt; right_table &gt; </p><p>( 2 ) ON &lt; join_condition &gt; </p><p>( 4 ) WHERE &lt; where_condition &gt; </p><p>( 5 ) GROUP BY &lt; group_by_list &gt; </p><p>( 6 ) WITH &lt; CUBE | RollUP &gt; </p><p>( 7 ) HAVING &lt; having_condition &gt; </p><p>( 10 ) ORDER BY &lt; order_by_list &gt;</p><p>从优先级我们可以看出为什么order by 排序在 group by 之前不生效了</p><p>之前那条sql之后后数据库warnings的执行方式是下面这样的<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span>,</span><br><span class="line">        <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> <span class="keyword">AS</span> <span class="string">`name`</span>,</span><br><span class="line">        <span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">AS</span> <span class="string">`sex`</span>,</span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`professor`</span> <span class="string">`a`</span></span><br><span class="line"><span class="keyword">WHERE</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`status`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`polling_status`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="keyword">not</span>(<span class="keyword">exists</span>(<span class="comment">/* select#2 */</span><span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`zwkj_zhxt`</span>.<span class="string">`sys_attend`</span> <span class="string">`b`</span></span><br><span class="line"><span class="keyword">WHERE</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`table_id`</span> = <span class="number">93353728</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`sex`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">AND</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`id`</span> = <span class="string">`zwkj_zhxt`</span>.<span class="string">`b`</span>.<span class="string">`professor_id`</span>)))))</span><br><span class="line">        <span class="keyword">AND</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> = <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">OR</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`name`</span> = <span class="number">3</span>))</span><br><span class="line">        <span class="keyword">AND</span> ((<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">IN</span> (<span class="number">4</span>,<span class="number">7</span>))</span><br><span class="line">        <span class="keyword">OR</span> (<span class="string">`zwkj_zhxt`</span>.<span class="string">`a`</span>.<span class="string">`sex`</span> <span class="keyword">IN</span> (<span class="number">4</span>,<span class="number">7</span>)))) <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>从上面还可以看出 and 的优先级 总是高于 or </p><p>但有一点需要注意的是 exteneded得到的sql并不是 最终优化执行的sql<br>这一点可以在官方文档中得到确认<a href="https://dev.mysql.com/doc/refman/8.0/en/explain-extended.html" target="_blank" rel="noopener">Extended EXPLAIN Output Format</a><br>但从优化的角度上来讲也能帮助我们.</p><p>一般企业数据库的优化 基本上是</p><p>配硬件+差不多的sql优化+分布式+分库分表+读写分离</p><p>等等 反正一系列的操作 基本满足80%的业务场景</p><p>当然我们优化个别业务需要根据实际场景来优化</p><p>如果确实说需要高级别的维护和优化 公司会有相对应的运维或者DB来做很少需要开发者担心</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本质上来讲 sql优化和数据库优化是两种优化&lt;/p&gt;
&lt;p&gt;数据库优化包含的种类较多 软件优化,硬件优化&lt;/p&gt;
&lt;p&gt;理论上 单个mysql数据库能够支撑的是每秒2000的并发 极限是5000&lt;/p&gt;
&lt;p&gt;当然本次不说数据库优化 先说sql优化&lt;/p&gt;
&lt;p&gt;sql优化
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
      <category term="优化" scheme="http://yoursite.com/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="db" scheme="http://yoursite.com/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>记一次ftp并发导致的bug</title>
    <link href="http://yoursite.com/2018/04/20/threadLocal/"/>
    <id>http://yoursite.com/2018/04/20/threadLocal/</id>
    <published>2018-04-19T16:00:00.000Z</published>
    <updated>2019-11-11T08:52:14.832Z</updated>
    
    <content type="html"><![CDATA[<p>ThreadLocal 适用于如下两种场景</p><ul><li><p>每个线程需要有自己单独的实例</p></li><li><p>实例需要在多个方法中共享，但不希望被多线程共享</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private ThreadLocal&lt;FTPClient&gt; ftpClientThreadLocal = new ThreadLocal&lt;FTPClient&gt;();</span><br><span class="line"></span><br><span class="line">private FTPClient getFTPClient()  &#123;</span><br><span class="line">if (ftpClientThreadLocal.get() != null &amp;&amp; ftpClientThreadLocal.get().isConnected()) &#123;</span><br><span class="line">return ftpClientThreadLocal.get();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">FTPClient ftpClient = new FTPClient(); //构造一个FtpClient实例</span><br><span class="line"></span><br><span class="line">ftpClient.setControlEncoding(&quot;UTF-8&quot;);</span><br><span class="line">//ftpClient.completePendingCommand();</span><br><span class="line"></span><br><span class="line">ftpClient.enterLocalPassiveMode();</span><br><span class="line">//ftpClient.enterLocalActiveMode();</span><br><span class="line">ftpClient.setBufferSize(1024*2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">loginFtp(ftpClient);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ftpClientThreadLocal.set(ftpClient);</span><br><span class="line">return ftpClient;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FTPClient ftpClient = getFTPClient();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ThreadLocal 适用于如下两种场景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每个线程需要有自己单独的实例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实例需要在多个方法中共享，但不希望被多线程共享&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>浅谈jvm</title>
    <link href="http://yoursite.com/2017/04/08/jvm/"/>
    <id>http://yoursite.com/2017/04/08/jvm/</id>
    <published>2017-04-07T16:00:00.000Z</published>
    <updated>2019-11-08T01:29:31.139Z</updated>
    
    <content type="html"><![CDATA[<p>jvm运行时数据分析</p><p>在区域中一般分为五块</p><p>运行时数据区域</p><ol><li><p>计数器<br> 通过改变这个计数器的值来获取下一条需要执行的字节码,包括判断<br> 循环,跳转,异常处理</p></li><li><p>方法区(method Area)</p><p> 该区域用来存放我们生成的各种对象信息</p></li></ol><ol start="3"><li><p>虚拟机栈(VM stack)<br> 每个类 都会在执行的时候创建一个栈帧(javap -c -s xxx.class)来存放关于这个类的所有信息.<br> 包括方法内的局部变量,以及各种操作帧数, 动态链接(各种引用)及方法的出口返回值等等。每个方法的调用到结束意味着虚拟机的栈桢的入栈到出栈,</p></li><li><p>堆(heap)<br> 在遇到new指令后 我们会根据相对应的内存引用来找如果有就引用 没有的话就执行类加载 Java 类加载过程那一套东西</p></li><li><p>本地方法栈(native mathod stack)<br> 存放本地原生调用方法和虚拟机栈一样只不过内容是原生计算机内的C方法native是与C++联合开发的时候用的 所以一般开发不会用到</p></li></ol><p>前面在堆中说了类引用会检查是否已经加载过当前需要的类 </p><p>如果没有加载则会去加载 那么类的加载过程就是下面要说的</p><p>当程序用到某个类但这个类还没有加载到内存中,jvm会通过加载,连接,初始化来对这个类进行初始化</p><ol><li>加载</li></ol><p>jvm通过类的全类名来获取字节流 (也就是.class文件) 然后根据字节流创建class对象  创建完成后写入到内存中,然后放在运行时区域的方法区内(method Area)  然后在堆(heap)中创建出对应的Class对象</p><ol start="2"><li>链接</li></ol><p>分为三部分 </p><p>验证语法  满足jvm虚拟机规范 </p><p>准备阶段  为类的静态static 分配内存 设置默认值</p><p>解析阶段  将符号引用替换为内存引用(直接引用)</p><ol start="3"><li>初始化</li></ol><p>将static修饰的方法或者变量进行初始化,如果有父级引用优先加载父类 </p><p>那么这个类的加载机制又是什么 它是通过什么来加载的</p><p>采用的双亲委派机制</p><p>当加载某个类的时候先去询问父类节点是否可以加载 </p><p>这样既避免了重复加载也防止了注入还提高了效率</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;jvm运行时数据分析&lt;/p&gt;
&lt;p&gt;在区域中一般分为五块&lt;/p&gt;
&lt;p&gt;运行时数据区域&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;计数器&lt;br&gt; 通过改变这个计数器的值来获取下一条需要执行的字节码,包括判断&lt;br&gt; 循环,跳转,异常处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法区(me
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>maven多环境配置文件</title>
    <link href="http://yoursite.com/2015/10/08/mavenProfileSpringboot/"/>
    <id>http://yoursite.com/2015/10/08/mavenProfileSpringboot/</id>
    <published>2015-10-07T16:00:00.000Z</published>
    <updated>2019-11-08T01:30:15.340Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 多环境配置文件激活属性---开发、测试、生产</span></span><br><span class="line"><span class="string">spring.profiles.active=@activatedProperties@</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 测试环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>test<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 本地开发环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认环境为开发环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profiles.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profiles.active</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 打包后的名字(test.war) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 打包时要把mapper.xml也打进去！ --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>test/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>dev/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/$&#123;profiles.active&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果先远程部署后本地启动需要先maven install</p><p>mvn clean package -Pdev  -Dmaven.test.skip=true</p><p>java -jar  /xxx/xxx.jar  –spring.profiles.active=dev </p><p>yml环境下有些区别 @换成#</p><p>详细情况可以参考 <a href="https://blog.csdn.net/colton_null/article/details/82145467" target="_blank" rel="noopener">SpringBoot + Maven实现多环境动态切换yml配置及配置文件拆分</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot观察者模式处理后台任务</title>
    <link href="http://yoursite.com/2015/10/08/tamplate%20copy/"/>
    <id>http://yoursite.com/2015/10/08/tamplate copy/</id>
    <published>2015-10-07T16:00:00.000Z</published>
    <updated>2019-11-12T10:38:43.521Z</updated>
    
    <content type="html"><![CDATA[<p>收到任务说要做一个后台监听文件上传接口 </p><p>如果有docx文档 需要将任务放在后台进程中</p><p>将docx文档转换成pdf文档</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;收到任务说要做一个后台监听文件上传接口 &lt;/p&gt;
&lt;p&gt;如果有docx文档 需要将任务放在后台进程中&lt;/p&gt;
&lt;p&gt;将docx文档转换成pdf文档&lt;/p&gt;

      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>博客MD模板应用</title>
    <link href="http://yoursite.com/2015/10/08/tamplate/"/>
    <id>http://yoursite.com/2015/10/08/tamplate/</id>
    <published>2015-10-07T16:00:00.000Z</published>
    <updated>2019-11-08T01:28:55.694Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="literal-asterisks-转义"><a href="#literal-asterisks-转义" class="headerlink" title="\literal asterisks\\ 转义"></a>\<em>literal asterisks\\</em> 转义</h1></blockquote><p>*literal asterisks*</p><blockquote><h1 id="MD语法-加粗-加粗"><a href="#MD语法-加粗-加粗" class="headerlink" title="MD语法 加粗 **加粗**"></a>MD语法 加粗 **加粗**</h1></blockquote><p><strong>比较粗</strong></p><blockquote><h1 id="MD语法-斜体-斜体"><a href="#MD语法-斜体-斜体" class="headerlink" title="MD语法 斜体 *斜体*"></a>MD语法 斜体 *斜体*</h1></blockquote><p><em>本来就是斜的</em>  </p><blockquote><h1 id="MD语法-列表1-2-3"><a href="#MD语法-列表1-2-3" class="headerlink" title="MD语法  列表1. 2. 3."></a>MD语法  列表1. 2. 3.</h1></blockquote><ol><li>ni shuo ni shi shui ?</li><li>ni bushi shuo ni me ?</li><li>wo xi huan de shi ni !</li></ol><blockquote><h1 id="MD语法-列表-XXX-XXX-XXX"><a href="#MD语法-列表-XXX-XXX-XXX" class="headerlink" title="MD语法  列表 -XXX -XXX -XXX"></a>MD语法  列表 -XXX -XXX -XXX</h1></blockquote><ul><li>wo bu shi yi ge haoren </li><li>na ni shi shen me ?</li><li>wo shi dog</li></ul><blockquote><h1 id="MD语法-分割线-代表一条分割线"><a href="#MD语法-分割线-代表一条分割线" class="headerlink" title="MD语法 分割线  *** 代表一条分割线"></a>MD语法 分割线  *** 代表一条分割线</h1></blockquote><hr><hr><hr><blockquote><h1 id="MD语法-A标签-A标签显示的名称-链接地址"><a href="#MD语法-A标签-A标签显示的名称-链接地址" class="headerlink" title="MD语法 A标签 [A标签显示的名称](链接地址)"></a>MD语法 A标签 [A标签显示的名称](链接地址)</h1></blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">baidu</a></p><blockquote><h1 id="MD语法-图片-图片说明-图片地址"><a href="#MD语法-图片-图片说明-图片地址" class="headerlink" title="MD语法  图片 ![ 图片说明 ](图片地址)"></a>MD语法  图片 ![ 图片说明 ](图片地址)</h1></blockquote><p><img src="/img/banner.jpg" alt="img"></p><blockquote><h1 id="MD语法-编写代码-三个"><a href="#MD语法-编写代码-三个" class="headerlink" title="MD语法 编写代码 三个 `"></a>MD语法 编写代码 三个 `</h1></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  <span class="title">print</span><span class="params">(<span class="string">'asd'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">test</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><blockquote><h1 id="MD语法-表格"><a href="#MD语法-表格" class="headerlink" title="MD语法 表格"></a>MD语法 表格</h1></blockquote><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">select_type</th><th style="text-align:center">table    </th></tr></thead><tbody><tr><td style="text-align:center"> 1</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”    </td></tr><tr><td style="text-align:center"> 2</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”    </td></tr><tr><td style="text-align:center"> 3</td><td style="text-align:center">“SIMPLE”</td><td style="text-align:center">“professor”    </td></tr></tbody></table><blockquote><h1 id="MD语法-标题-一个-号是一级标题-依此类推"><a href="#MD语法-标题-一个-号是一级标题-依此类推" class="headerlink" title="MD语法 标题  一个#号是一级标题 依此类推"></a>MD语法 标题  一个#号是一级标题 依此类推</h1></blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h1 id=&quot;literal-asterisks-转义&quot;&gt;&lt;a href=&quot;#literal-asterisks-转义&quot; class=&quot;headerlink&quot; title=&quot;\literal asterisks\\ 转义&quot;&gt;&lt;/a&gt;\&lt;em&gt;liter
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>局域网共享文件夹如何换用户名登陆</title>
    <link href="http://yoursite.com/2015/10/08/windows01/"/>
    <id>http://yoursite.com/2015/10/08/windows01/</id>
    <published>2015-10-07T16:00:00.000Z</published>
    <updated>2019-11-08T01:28:30.602Z</updated>
    
    <content type="html"><![CDATA[<p>你在运行里输入 CMD<br>在命令提示符中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use * /delete</span><br></pre></td></tr></table></figure><p>OR</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use * /del /y</span><br></pre></td></tr></table></figure><p>然后它会问你是否要删除网络连接，按 Y，回车即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你在运行里输入 CMD&lt;br&gt;在命令提示符中输入：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/t
      
    
    </summary>
    
      <category term="windwos" scheme="http://yoursite.com/categories/windwos/"/>
    
    
      <category term="共享文件夹" scheme="http://yoursite.com/tags/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    
      <category term="登陆" scheme="http://yoursite.com/tags/%E7%99%BB%E9%99%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo基本命令</title>
    <link href="http://yoursite.com/2015/05/02/hexoShell/"/>
    <id>http://yoursite.com/2015/05/02/hexoShell/</id>
    <published>2015-05-01T16:00:00.000Z</published>
    <updated>2019-11-11T09:47:04.618Z</updated>
    
    <content type="html"><![CDATA[<p>本地部署验证<br>hexo s -g</p><p>清理并生成<br>hexo clean &amp;&amp; hexo g</p><p>远程部署<br>hexo d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本地部署验证&lt;br&gt;hexo s -g&lt;/p&gt;
&lt;p&gt;清理并生成&lt;br&gt;hexo clean &amp;amp;&amp;amp; hexo g&lt;/p&gt;
&lt;p&gt;远程部署&lt;br&gt;hexo d&lt;/p&gt;

      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
